/**
 * Autogenerated by Thrift Compiler (0.20.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.starrocks.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.20.0)", date = "2025-06-16")
public class TGetWarehouseMetricsRespone implements org.apache.thrift.TBase<TGetWarehouseMetricsRespone, TGetWarehouseMetricsRespone._Fields>, java.io.Serializable, Cloneable, Comparable<TGetWarehouseMetricsRespone> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TGetWarehouseMetricsRespone");

  private static final org.apache.thrift.protocol.TField METRICS_FIELD_DESC = new org.apache.thrift.protocol.TField("metrics", org.apache.thrift.protocol.TType.LIST, (short)1);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TGetWarehouseMetricsResponeStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TGetWarehouseMetricsResponeTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.util.List<TGetWarehouseMetricsResponeItem> metrics; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    METRICS((short)1, "metrics");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // METRICS
          return METRICS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.METRICS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.METRICS, new org.apache.thrift.meta_data.FieldMetaData("metrics", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TGetWarehouseMetricsResponeItem.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TGetWarehouseMetricsRespone.class, metaDataMap);
  }

  public TGetWarehouseMetricsRespone() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TGetWarehouseMetricsRespone(TGetWarehouseMetricsRespone other) {
    if (other.isSetMetrics()) {
      java.util.List<TGetWarehouseMetricsResponeItem> __this__metrics = new java.util.ArrayList<TGetWarehouseMetricsResponeItem>(other.metrics.size());
      for (TGetWarehouseMetricsResponeItem other_element : other.metrics) {
        __this__metrics.add(new TGetWarehouseMetricsResponeItem(other_element));
      }
      this.metrics = __this__metrics;
    }
  }

  @Override
  public TGetWarehouseMetricsRespone deepCopy() {
    return new TGetWarehouseMetricsRespone(this);
  }

  @Override
  public void clear() {
    this.metrics = null;
  }

  public int getMetricsSize() {
    return (this.metrics == null) ? 0 : this.metrics.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<TGetWarehouseMetricsResponeItem> getMetricsIterator() {
    return (this.metrics == null) ? null : this.metrics.iterator();
  }

  public void addToMetrics(TGetWarehouseMetricsResponeItem elem) {
    if (this.metrics == null) {
      this.metrics = new java.util.ArrayList<TGetWarehouseMetricsResponeItem>();
    }
    this.metrics.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<TGetWarehouseMetricsResponeItem> getMetrics() {
    return this.metrics;
  }

  public TGetWarehouseMetricsRespone setMetrics(@org.apache.thrift.annotation.Nullable java.util.List<TGetWarehouseMetricsResponeItem> metrics) {
    this.metrics = metrics;
    return this;
  }

  public void unsetMetrics() {
    this.metrics = null;
  }

  /** Returns true if field metrics is set (has been assigned a value) and false otherwise */
  public boolean isSetMetrics() {
    return this.metrics != null;
  }

  public void setMetricsIsSet(boolean value) {
    if (!value) {
      this.metrics = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case METRICS:
      if (value == null) {
        unsetMetrics();
      } else {
        setMetrics((java.util.List<TGetWarehouseMetricsResponeItem>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case METRICS:
      return getMetrics();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case METRICS:
      return isSetMetrics();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TGetWarehouseMetricsRespone)
      return this.equals((TGetWarehouseMetricsRespone)that);
    return false;
  }

  public boolean equals(TGetWarehouseMetricsRespone that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_metrics = true && this.isSetMetrics();
    boolean that_present_metrics = true && that.isSetMetrics();
    if (this_present_metrics || that_present_metrics) {
      if (!(this_present_metrics && that_present_metrics))
        return false;
      if (!this.metrics.equals(that.metrics))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetMetrics()) ? 131071 : 524287);
    if (isSetMetrics())
      hashCode = hashCode * 8191 + metrics.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TGetWarehouseMetricsRespone other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetMetrics(), other.isSetMetrics());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMetrics()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.metrics, other.metrics);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TGetWarehouseMetricsRespone(");
    boolean first = true;

    if (isSetMetrics()) {
      sb.append("metrics:");
      if (this.metrics == null) {
        sb.append("null");
      } else {
        sb.append(this.metrics);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TGetWarehouseMetricsResponeStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TGetWarehouseMetricsResponeStandardScheme getScheme() {
      return new TGetWarehouseMetricsResponeStandardScheme();
    }
  }

  private static class TGetWarehouseMetricsResponeStandardScheme extends org.apache.thrift.scheme.StandardScheme<TGetWarehouseMetricsRespone> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TGetWarehouseMetricsRespone struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // METRICS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list878 = iprot.readListBegin();
                struct.metrics = new java.util.ArrayList<TGetWarehouseMetricsResponeItem>(_list878.size);
                @org.apache.thrift.annotation.Nullable TGetWarehouseMetricsResponeItem _elem879;
                for (int _i880 = 0; _i880 < _list878.size; ++_i880)
                {
                  _elem879 = new TGetWarehouseMetricsResponeItem();
                  _elem879.read(iprot);
                  struct.metrics.add(_elem879);
                }
                iprot.readListEnd();
              }
              struct.setMetricsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TGetWarehouseMetricsRespone struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.metrics != null) {
        if (struct.isSetMetrics()) {
          oprot.writeFieldBegin(METRICS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.metrics.size()));
            for (TGetWarehouseMetricsResponeItem _iter881 : struct.metrics)
            {
              _iter881.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TGetWarehouseMetricsResponeTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TGetWarehouseMetricsResponeTupleScheme getScheme() {
      return new TGetWarehouseMetricsResponeTupleScheme();
    }
  }

  private static class TGetWarehouseMetricsResponeTupleScheme extends org.apache.thrift.scheme.TupleScheme<TGetWarehouseMetricsRespone> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TGetWarehouseMetricsRespone struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetMetrics()) {
        optionals.set(0);
      }
      oprot.writeBitSet(optionals, 1);
      if (struct.isSetMetrics()) {
        {
          oprot.writeI32(struct.metrics.size());
          for (TGetWarehouseMetricsResponeItem _iter882 : struct.metrics)
          {
            _iter882.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TGetWarehouseMetricsRespone struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(1);
      if (incoming.get(0)) {
        {
          org.apache.thrift.protocol.TList _list883 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
          struct.metrics = new java.util.ArrayList<TGetWarehouseMetricsResponeItem>(_list883.size);
          @org.apache.thrift.annotation.Nullable TGetWarehouseMetricsResponeItem _elem884;
          for (int _i885 = 0; _i885 < _list883.size; ++_i885)
          {
            _elem884 = new TGetWarehouseMetricsResponeItem();
            _elem884.read(iprot);
            struct.metrics.add(_elem884);
          }
        }
        struct.setMetricsIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

