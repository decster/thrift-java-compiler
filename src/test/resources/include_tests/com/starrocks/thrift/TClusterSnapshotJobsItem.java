/**
 * Autogenerated by Thrift Compiler (0.20.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.starrocks.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.20.0)", date = "2025-06-16")
public class TClusterSnapshotJobsItem implements org.apache.thrift.TBase<TClusterSnapshotJobsItem, TClusterSnapshotJobsItem._Fields>, java.io.Serializable, Cloneable, Comparable<TClusterSnapshotJobsItem> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TClusterSnapshotJobsItem");

  private static final org.apache.thrift.protocol.TField SNAPSHOT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("snapshot_name", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField JOB_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("job_id", org.apache.thrift.protocol.TType.I64, (short)2);
  private static final org.apache.thrift.protocol.TField CREATED_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("created_time", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField FINISHED_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("finished_time", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("state", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField DETAIL_INFO_FIELD_DESC = new org.apache.thrift.protocol.TField("detail_info", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField ERROR_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("error_message", org.apache.thrift.protocol.TType.STRING, (short)7);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TClusterSnapshotJobsItemStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TClusterSnapshotJobsItemTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String snapshot_name; // optional
  public long job_id; // optional
  public long created_time; // optional
  public long finished_time; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String state; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String detail_info; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String error_message; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SNAPSHOT_NAME((short)1, "snapshot_name"),
    JOB_ID((short)2, "job_id"),
    CREATED_TIME((short)3, "created_time"),
    FINISHED_TIME((short)4, "finished_time"),
    STATE((short)5, "state"),
    DETAIL_INFO((short)6, "detail_info"),
    ERROR_MESSAGE((short)7, "error_message");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SNAPSHOT_NAME
          return SNAPSHOT_NAME;
        case 2: // JOB_ID
          return JOB_ID;
        case 3: // CREATED_TIME
          return CREATED_TIME;
        case 4: // FINISHED_TIME
          return FINISHED_TIME;
        case 5: // STATE
          return STATE;
        case 6: // DETAIL_INFO
          return DETAIL_INFO;
        case 7: // ERROR_MESSAGE
          return ERROR_MESSAGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __JOB_ID_ISSET_ID = 0;
  private static final int __CREATED_TIME_ISSET_ID = 1;
  private static final int __FINISHED_TIME_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.SNAPSHOT_NAME,_Fields.JOB_ID,_Fields.CREATED_TIME,_Fields.FINISHED_TIME,_Fields.STATE,_Fields.DETAIL_INFO,_Fields.ERROR_MESSAGE};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SNAPSHOT_NAME, new org.apache.thrift.meta_data.FieldMetaData("snapshot_name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.JOB_ID, new org.apache.thrift.meta_data.FieldMetaData("job_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.CREATED_TIME, new org.apache.thrift.meta_data.FieldMetaData("created_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FINISHED_TIME, new org.apache.thrift.meta_data.FieldMetaData("finished_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STATE, new org.apache.thrift.meta_data.FieldMetaData("state", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DETAIL_INFO, new org.apache.thrift.meta_data.FieldMetaData("detail_info", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ERROR_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("error_message", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TClusterSnapshotJobsItem.class, metaDataMap);
  }

  public TClusterSnapshotJobsItem() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TClusterSnapshotJobsItem(TClusterSnapshotJobsItem other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetSnapshot_name()) {
      this.snapshot_name = other.snapshot_name;
    }
    this.job_id = other.job_id;
    this.created_time = other.created_time;
    this.finished_time = other.finished_time;
    if (other.isSetState()) {
      this.state = other.state;
    }
    if (other.isSetDetail_info()) {
      this.detail_info = other.detail_info;
    }
    if (other.isSetError_message()) {
      this.error_message = other.error_message;
    }
  }

  @Override
  public TClusterSnapshotJobsItem deepCopy() {
    return new TClusterSnapshotJobsItem(this);
  }

  @Override
  public void clear() {
    this.snapshot_name = null;
    setJob_idIsSet(false);
    this.job_id = 0;
    setCreated_timeIsSet(false);
    this.created_time = 0;
    setFinished_timeIsSet(false);
    this.finished_time = 0;
    this.state = null;
    this.detail_info = null;
    this.error_message = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getSnapshot_name() {
    return this.snapshot_name;
  }

  public TClusterSnapshotJobsItem setSnapshot_name(@org.apache.thrift.annotation.Nullable java.lang.String snapshot_name) {
    this.snapshot_name = snapshot_name;
    return this;
  }

  public void unsetSnapshot_name() {
    this.snapshot_name = null;
  }

  /** Returns true if field snapshot_name is set (has been assigned a value) and false otherwise */
  public boolean isSetSnapshot_name() {
    return this.snapshot_name != null;
  }

  public void setSnapshot_nameIsSet(boolean value) {
    if (!value) {
      this.snapshot_name = null;
    }
  }

  public long getJob_id() {
    return this.job_id;
  }

  public TClusterSnapshotJobsItem setJob_id(long job_id) {
    this.job_id = job_id;
    setJob_idIsSet(true);
    return this;
  }

  public void unsetJob_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __JOB_ID_ISSET_ID);
  }

  /** Returns true if field job_id is set (has been assigned a value) and false otherwise */
  public boolean isSetJob_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __JOB_ID_ISSET_ID);
  }

  public void setJob_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __JOB_ID_ISSET_ID, value);
  }

  public long getCreated_time() {
    return this.created_time;
  }

  public TClusterSnapshotJobsItem setCreated_time(long created_time) {
    this.created_time = created_time;
    setCreated_timeIsSet(true);
    return this;
  }

  public void unsetCreated_time() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATED_TIME_ISSET_ID);
  }

  /** Returns true if field created_time is set (has been assigned a value) and false otherwise */
  public boolean isSetCreated_time() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATED_TIME_ISSET_ID);
  }

  public void setCreated_timeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATED_TIME_ISSET_ID, value);
  }

  public long getFinished_time() {
    return this.finished_time;
  }

  public TClusterSnapshotJobsItem setFinished_time(long finished_time) {
    this.finished_time = finished_time;
    setFinished_timeIsSet(true);
    return this;
  }

  public void unsetFinished_time() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FINISHED_TIME_ISSET_ID);
  }

  /** Returns true if field finished_time is set (has been assigned a value) and false otherwise */
  public boolean isSetFinished_time() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FINISHED_TIME_ISSET_ID);
  }

  public void setFinished_timeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FINISHED_TIME_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getState() {
    return this.state;
  }

  public TClusterSnapshotJobsItem setState(@org.apache.thrift.annotation.Nullable java.lang.String state) {
    this.state = state;
    return this;
  }

  public void unsetState() {
    this.state = null;
  }

  /** Returns true if field state is set (has been assigned a value) and false otherwise */
  public boolean isSetState() {
    return this.state != null;
  }

  public void setStateIsSet(boolean value) {
    if (!value) {
      this.state = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDetail_info() {
    return this.detail_info;
  }

  public TClusterSnapshotJobsItem setDetail_info(@org.apache.thrift.annotation.Nullable java.lang.String detail_info) {
    this.detail_info = detail_info;
    return this;
  }

  public void unsetDetail_info() {
    this.detail_info = null;
  }

  /** Returns true if field detail_info is set (has been assigned a value) and false otherwise */
  public boolean isSetDetail_info() {
    return this.detail_info != null;
  }

  public void setDetail_infoIsSet(boolean value) {
    if (!value) {
      this.detail_info = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getError_message() {
    return this.error_message;
  }

  public TClusterSnapshotJobsItem setError_message(@org.apache.thrift.annotation.Nullable java.lang.String error_message) {
    this.error_message = error_message;
    return this;
  }

  public void unsetError_message() {
    this.error_message = null;
  }

  /** Returns true if field error_message is set (has been assigned a value) and false otherwise */
  public boolean isSetError_message() {
    return this.error_message != null;
  }

  public void setError_messageIsSet(boolean value) {
    if (!value) {
      this.error_message = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case SNAPSHOT_NAME:
      if (value == null) {
        unsetSnapshot_name();
      } else {
        setSnapshot_name((java.lang.String)value);
      }
      break;

    case JOB_ID:
      if (value == null) {
        unsetJob_id();
      } else {
        setJob_id((java.lang.Long)value);
      }
      break;

    case CREATED_TIME:
      if (value == null) {
        unsetCreated_time();
      } else {
        setCreated_time((java.lang.Long)value);
      }
      break;

    case FINISHED_TIME:
      if (value == null) {
        unsetFinished_time();
      } else {
        setFinished_time((java.lang.Long)value);
      }
      break;

    case STATE:
      if (value == null) {
        unsetState();
      } else {
        setState((java.lang.String)value);
      }
      break;

    case DETAIL_INFO:
      if (value == null) {
        unsetDetail_info();
      } else {
        setDetail_info((java.lang.String)value);
      }
      break;

    case ERROR_MESSAGE:
      if (value == null) {
        unsetError_message();
      } else {
        setError_message((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SNAPSHOT_NAME:
      return getSnapshot_name();

    case JOB_ID:
      return getJob_id();

    case CREATED_TIME:
      return getCreated_time();

    case FINISHED_TIME:
      return getFinished_time();

    case STATE:
      return getState();

    case DETAIL_INFO:
      return getDetail_info();

    case ERROR_MESSAGE:
      return getError_message();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SNAPSHOT_NAME:
      return isSetSnapshot_name();
    case JOB_ID:
      return isSetJob_id();
    case CREATED_TIME:
      return isSetCreated_time();
    case FINISHED_TIME:
      return isSetFinished_time();
    case STATE:
      return isSetState();
    case DETAIL_INFO:
      return isSetDetail_info();
    case ERROR_MESSAGE:
      return isSetError_message();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TClusterSnapshotJobsItem)
      return this.equals((TClusterSnapshotJobsItem)that);
    return false;
  }

  public boolean equals(TClusterSnapshotJobsItem that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_snapshot_name = true && this.isSetSnapshot_name();
    boolean that_present_snapshot_name = true && that.isSetSnapshot_name();
    if (this_present_snapshot_name || that_present_snapshot_name) {
      if (!(this_present_snapshot_name && that_present_snapshot_name))
        return false;
      if (!this.snapshot_name.equals(that.snapshot_name))
        return false;
    }

    boolean this_present_job_id = true && this.isSetJob_id();
    boolean that_present_job_id = true && that.isSetJob_id();
    if (this_present_job_id || that_present_job_id) {
      if (!(this_present_job_id && that_present_job_id))
        return false;
      if (this.job_id != that.job_id)
        return false;
    }

    boolean this_present_created_time = true && this.isSetCreated_time();
    boolean that_present_created_time = true && that.isSetCreated_time();
    if (this_present_created_time || that_present_created_time) {
      if (!(this_present_created_time && that_present_created_time))
        return false;
      if (this.created_time != that.created_time)
        return false;
    }

    boolean this_present_finished_time = true && this.isSetFinished_time();
    boolean that_present_finished_time = true && that.isSetFinished_time();
    if (this_present_finished_time || that_present_finished_time) {
      if (!(this_present_finished_time && that_present_finished_time))
        return false;
      if (this.finished_time != that.finished_time)
        return false;
    }

    boolean this_present_state = true && this.isSetState();
    boolean that_present_state = true && that.isSetState();
    if (this_present_state || that_present_state) {
      if (!(this_present_state && that_present_state))
        return false;
      if (!this.state.equals(that.state))
        return false;
    }

    boolean this_present_detail_info = true && this.isSetDetail_info();
    boolean that_present_detail_info = true && that.isSetDetail_info();
    if (this_present_detail_info || that_present_detail_info) {
      if (!(this_present_detail_info && that_present_detail_info))
        return false;
      if (!this.detail_info.equals(that.detail_info))
        return false;
    }

    boolean this_present_error_message = true && this.isSetError_message();
    boolean that_present_error_message = true && that.isSetError_message();
    if (this_present_error_message || that_present_error_message) {
      if (!(this_present_error_message && that_present_error_message))
        return false;
      if (!this.error_message.equals(that.error_message))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetSnapshot_name()) ? 131071 : 524287);
    if (isSetSnapshot_name())
      hashCode = hashCode * 8191 + snapshot_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetJob_id()) ? 131071 : 524287);
    if (isSetJob_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(job_id);

    hashCode = hashCode * 8191 + ((isSetCreated_time()) ? 131071 : 524287);
    if (isSetCreated_time())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(created_time);

    hashCode = hashCode * 8191 + ((isSetFinished_time()) ? 131071 : 524287);
    if (isSetFinished_time())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(finished_time);

    hashCode = hashCode * 8191 + ((isSetState()) ? 131071 : 524287);
    if (isSetState())
      hashCode = hashCode * 8191 + state.hashCode();

    hashCode = hashCode * 8191 + ((isSetDetail_info()) ? 131071 : 524287);
    if (isSetDetail_info())
      hashCode = hashCode * 8191 + detail_info.hashCode();

    hashCode = hashCode * 8191 + ((isSetError_message()) ? 131071 : 524287);
    if (isSetError_message())
      hashCode = hashCode * 8191 + error_message.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TClusterSnapshotJobsItem other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetSnapshot_name(), other.isSetSnapshot_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSnapshot_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.snapshot_name, other.snapshot_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetJob_id(), other.isSetJob_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJob_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.job_id, other.job_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCreated_time(), other.isSetCreated_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreated_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.created_time, other.created_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetFinished_time(), other.isSetFinished_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFinished_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.finished_time, other.finished_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetState(), other.isSetState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.state, other.state);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDetail_info(), other.isSetDetail_info());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDetail_info()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.detail_info, other.detail_info);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetError_message(), other.isSetError_message());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetError_message()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.error_message, other.error_message);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TClusterSnapshotJobsItem(");
    boolean first = true;

    if (isSetSnapshot_name()) {
      sb.append("snapshot_name:");
      if (this.snapshot_name == null) {
        sb.append("null");
      } else {
        sb.append(this.snapshot_name);
      }
      first = false;
    }
    if (isSetJob_id()) {
      if (!first) sb.append(", ");
      sb.append("job_id:");
      sb.append(this.job_id);
      first = false;
    }
    if (isSetCreated_time()) {
      if (!first) sb.append(", ");
      sb.append("created_time:");
      sb.append(this.created_time);
      first = false;
    }
    if (isSetFinished_time()) {
      if (!first) sb.append(", ");
      sb.append("finished_time:");
      sb.append(this.finished_time);
      first = false;
    }
    if (isSetState()) {
      if (!first) sb.append(", ");
      sb.append("state:");
      if (this.state == null) {
        sb.append("null");
      } else {
        sb.append(this.state);
      }
      first = false;
    }
    if (isSetDetail_info()) {
      if (!first) sb.append(", ");
      sb.append("detail_info:");
      if (this.detail_info == null) {
        sb.append("null");
      } else {
        sb.append(this.detail_info);
      }
      first = false;
    }
    if (isSetError_message()) {
      if (!first) sb.append(", ");
      sb.append("error_message:");
      if (this.error_message == null) {
        sb.append("null");
      } else {
        sb.append(this.error_message);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TClusterSnapshotJobsItemStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TClusterSnapshotJobsItemStandardScheme getScheme() {
      return new TClusterSnapshotJobsItemStandardScheme();
    }
  }

  private static class TClusterSnapshotJobsItemStandardScheme extends org.apache.thrift.scheme.StandardScheme<TClusterSnapshotJobsItem> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TClusterSnapshotJobsItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SNAPSHOT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.snapshot_name = iprot.readString();
              struct.setSnapshot_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // JOB_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.job_id = iprot.readI64();
              struct.setJob_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CREATED_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.created_time = iprot.readI64();
              struct.setCreated_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FINISHED_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.finished_time = iprot.readI64();
              struct.setFinished_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.state = iprot.readString();
              struct.setStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // DETAIL_INFO
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.detail_info = iprot.readString();
              struct.setDetail_infoIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // ERROR_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.error_message = iprot.readString();
              struct.setError_messageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TClusterSnapshotJobsItem struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.snapshot_name != null) {
        if (struct.isSetSnapshot_name()) {
          oprot.writeFieldBegin(SNAPSHOT_NAME_FIELD_DESC);
          oprot.writeString(struct.snapshot_name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetJob_id()) {
        oprot.writeFieldBegin(JOB_ID_FIELD_DESC);
        oprot.writeI64(struct.job_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetCreated_time()) {
        oprot.writeFieldBegin(CREATED_TIME_FIELD_DESC);
        oprot.writeI64(struct.created_time);
        oprot.writeFieldEnd();
      }
      if (struct.isSetFinished_time()) {
        oprot.writeFieldBegin(FINISHED_TIME_FIELD_DESC);
        oprot.writeI64(struct.finished_time);
        oprot.writeFieldEnd();
      }
      if (struct.state != null) {
        if (struct.isSetState()) {
          oprot.writeFieldBegin(STATE_FIELD_DESC);
          oprot.writeString(struct.state);
          oprot.writeFieldEnd();
        }
      }
      if (struct.detail_info != null) {
        if (struct.isSetDetail_info()) {
          oprot.writeFieldBegin(DETAIL_INFO_FIELD_DESC);
          oprot.writeString(struct.detail_info);
          oprot.writeFieldEnd();
        }
      }
      if (struct.error_message != null) {
        if (struct.isSetError_message()) {
          oprot.writeFieldBegin(ERROR_MESSAGE_FIELD_DESC);
          oprot.writeString(struct.error_message);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TClusterSnapshotJobsItemTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TClusterSnapshotJobsItemTupleScheme getScheme() {
      return new TClusterSnapshotJobsItemTupleScheme();
    }
  }

  private static class TClusterSnapshotJobsItemTupleScheme extends org.apache.thrift.scheme.TupleScheme<TClusterSnapshotJobsItem> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TClusterSnapshotJobsItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSnapshot_name()) {
        optionals.set(0);
      }
      if (struct.isSetJob_id()) {
        optionals.set(1);
      }
      if (struct.isSetCreated_time()) {
        optionals.set(2);
      }
      if (struct.isSetFinished_time()) {
        optionals.set(3);
      }
      if (struct.isSetState()) {
        optionals.set(4);
      }
      if (struct.isSetDetail_info()) {
        optionals.set(5);
      }
      if (struct.isSetError_message()) {
        optionals.set(6);
      }
      oprot.writeBitSet(optionals, 7);
      if (struct.isSetSnapshot_name()) {
        oprot.writeString(struct.snapshot_name);
      }
      if (struct.isSetJob_id()) {
        oprot.writeI64(struct.job_id);
      }
      if (struct.isSetCreated_time()) {
        oprot.writeI64(struct.created_time);
      }
      if (struct.isSetFinished_time()) {
        oprot.writeI64(struct.finished_time);
      }
      if (struct.isSetState()) {
        oprot.writeString(struct.state);
      }
      if (struct.isSetDetail_info()) {
        oprot.writeString(struct.detail_info);
      }
      if (struct.isSetError_message()) {
        oprot.writeString(struct.error_message);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TClusterSnapshotJobsItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(7);
      if (incoming.get(0)) {
        struct.snapshot_name = iprot.readString();
        struct.setSnapshot_nameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.job_id = iprot.readI64();
        struct.setJob_idIsSet(true);
      }
      if (incoming.get(2)) {
        struct.created_time = iprot.readI64();
        struct.setCreated_timeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.finished_time = iprot.readI64();
        struct.setFinished_timeIsSet(true);
      }
      if (incoming.get(4)) {
        struct.state = iprot.readString();
        struct.setStateIsSet(true);
      }
      if (incoming.get(5)) {
        struct.detail_info = iprot.readString();
        struct.setDetail_infoIsSet(true);
      }
      if (incoming.get(6)) {
        struct.error_message = iprot.readString();
        struct.setError_messageIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

