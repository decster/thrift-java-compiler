/**
 * Autogenerated by Thrift Compiler (0.20.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.starrocks.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.20.0)", date = "2025-06-16")
public class TApplicableRolesInfo implements org.apache.thrift.TBase<TApplicableRolesInfo, TApplicableRolesInfo._Fields>, java.io.Serializable, Cloneable, Comparable<TApplicableRolesInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TApplicableRolesInfo");

  private static final org.apache.thrift.protocol.TField USER_FIELD_DESC = new org.apache.thrift.protocol.TField("user", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField HOST_FIELD_DESC = new org.apache.thrift.protocol.TField("host", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField GRANTEE_FIELD_DESC = new org.apache.thrift.protocol.TField("grantee", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField GRANTEE_HOST_FIELD_DESC = new org.apache.thrift.protocol.TField("grantee_host", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField ROLE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("role_name", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ROLE_HOST_FIELD_DESC = new org.apache.thrift.protocol.TField("role_host", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField IS_GRANTABLE_FIELD_DESC = new org.apache.thrift.protocol.TField("is_grantable", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField IS_DEFAULT_FIELD_DESC = new org.apache.thrift.protocol.TField("is_default", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField IS_MANDATORY_FIELD_DESC = new org.apache.thrift.protocol.TField("is_mandatory", org.apache.thrift.protocol.TType.STRING, (short)9);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TApplicableRolesInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TApplicableRolesInfoTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String user; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String host; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String grantee; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String grantee_host; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String role_name; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String role_host; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String is_grantable; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String is_default; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String is_mandatory; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    USER((short)1, "user"),
    HOST((short)2, "host"),
    GRANTEE((short)3, "grantee"),
    GRANTEE_HOST((short)4, "grantee_host"),
    ROLE_NAME((short)5, "role_name"),
    ROLE_HOST((short)6, "role_host"),
    IS_GRANTABLE((short)7, "is_grantable"),
    IS_DEFAULT((short)8, "is_default"),
    IS_MANDATORY((short)9, "is_mandatory");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // USER
          return USER;
        case 2: // HOST
          return HOST;
        case 3: // GRANTEE
          return GRANTEE;
        case 4: // GRANTEE_HOST
          return GRANTEE_HOST;
        case 5: // ROLE_NAME
          return ROLE_NAME;
        case 6: // ROLE_HOST
          return ROLE_HOST;
        case 7: // IS_GRANTABLE
          return IS_GRANTABLE;
        case 8: // IS_DEFAULT
          return IS_DEFAULT;
        case 9: // IS_MANDATORY
          return IS_MANDATORY;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.USER,_Fields.HOST,_Fields.GRANTEE,_Fields.GRANTEE_HOST,_Fields.ROLE_NAME,_Fields.ROLE_HOST,_Fields.IS_GRANTABLE,_Fields.IS_DEFAULT,_Fields.IS_MANDATORY};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.USER, new org.apache.thrift.meta_data.FieldMetaData("user", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.HOST, new org.apache.thrift.meta_data.FieldMetaData("host", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GRANTEE, new org.apache.thrift.meta_data.FieldMetaData("grantee", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.GRANTEE_HOST, new org.apache.thrift.meta_data.FieldMetaData("grantee_host", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ROLE_NAME, new org.apache.thrift.meta_data.FieldMetaData("role_name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ROLE_HOST, new org.apache.thrift.meta_data.FieldMetaData("role_host", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_GRANTABLE, new org.apache.thrift.meta_data.FieldMetaData("is_grantable", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_DEFAULT, new org.apache.thrift.meta_data.FieldMetaData("is_default", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_MANDATORY, new org.apache.thrift.meta_data.FieldMetaData("is_mandatory", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TApplicableRolesInfo.class, metaDataMap);
  }

  public TApplicableRolesInfo() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TApplicableRolesInfo(TApplicableRolesInfo other) {
    if (other.isSetUser()) {
      this.user = other.user;
    }
    if (other.isSetHost()) {
      this.host = other.host;
    }
    if (other.isSetGrantee()) {
      this.grantee = other.grantee;
    }
    if (other.isSetGrantee_host()) {
      this.grantee_host = other.grantee_host;
    }
    if (other.isSetRole_name()) {
      this.role_name = other.role_name;
    }
    if (other.isSetRole_host()) {
      this.role_host = other.role_host;
    }
    if (other.isSetIs_grantable()) {
      this.is_grantable = other.is_grantable;
    }
    if (other.isSetIs_default()) {
      this.is_default = other.is_default;
    }
    if (other.isSetIs_mandatory()) {
      this.is_mandatory = other.is_mandatory;
    }
  }

  @Override
  public TApplicableRolesInfo deepCopy() {
    return new TApplicableRolesInfo(this);
  }

  @Override
  public void clear() {
    this.user = null;
    this.host = null;
    this.grantee = null;
    this.grantee_host = null;
    this.role_name = null;
    this.role_host = null;
    this.is_grantable = null;
    this.is_default = null;
    this.is_mandatory = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getUser() {
    return this.user;
  }

  public TApplicableRolesInfo setUser(@org.apache.thrift.annotation.Nullable java.lang.String user) {
    this.user = user;
    return this;
  }

  public void unsetUser() {
    this.user = null;
  }

  /** Returns true if field user is set (has been assigned a value) and false otherwise */
  public boolean isSetUser() {
    return this.user != null;
  }

  public void setUserIsSet(boolean value) {
    if (!value) {
      this.user = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getHost() {
    return this.host;
  }

  public TApplicableRolesInfo setHost(@org.apache.thrift.annotation.Nullable java.lang.String host) {
    this.host = host;
    return this;
  }

  public void unsetHost() {
    this.host = null;
  }

  /** Returns true if field host is set (has been assigned a value) and false otherwise */
  public boolean isSetHost() {
    return this.host != null;
  }

  public void setHostIsSet(boolean value) {
    if (!value) {
      this.host = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getGrantee() {
    return this.grantee;
  }

  public TApplicableRolesInfo setGrantee(@org.apache.thrift.annotation.Nullable java.lang.String grantee) {
    this.grantee = grantee;
    return this;
  }

  public void unsetGrantee() {
    this.grantee = null;
  }

  /** Returns true if field grantee is set (has been assigned a value) and false otherwise */
  public boolean isSetGrantee() {
    return this.grantee != null;
  }

  public void setGranteeIsSet(boolean value) {
    if (!value) {
      this.grantee = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getGrantee_host() {
    return this.grantee_host;
  }

  public TApplicableRolesInfo setGrantee_host(@org.apache.thrift.annotation.Nullable java.lang.String grantee_host) {
    this.grantee_host = grantee_host;
    return this;
  }

  public void unsetGrantee_host() {
    this.grantee_host = null;
  }

  /** Returns true if field grantee_host is set (has been assigned a value) and false otherwise */
  public boolean isSetGrantee_host() {
    return this.grantee_host != null;
  }

  public void setGrantee_hostIsSet(boolean value) {
    if (!value) {
      this.grantee_host = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getRole_name() {
    return this.role_name;
  }

  public TApplicableRolesInfo setRole_name(@org.apache.thrift.annotation.Nullable java.lang.String role_name) {
    this.role_name = role_name;
    return this;
  }

  public void unsetRole_name() {
    this.role_name = null;
  }

  /** Returns true if field role_name is set (has been assigned a value) and false otherwise */
  public boolean isSetRole_name() {
    return this.role_name != null;
  }

  public void setRole_nameIsSet(boolean value) {
    if (!value) {
      this.role_name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getRole_host() {
    return this.role_host;
  }

  public TApplicableRolesInfo setRole_host(@org.apache.thrift.annotation.Nullable java.lang.String role_host) {
    this.role_host = role_host;
    return this;
  }

  public void unsetRole_host() {
    this.role_host = null;
  }

  /** Returns true if field role_host is set (has been assigned a value) and false otherwise */
  public boolean isSetRole_host() {
    return this.role_host != null;
  }

  public void setRole_hostIsSet(boolean value) {
    if (!value) {
      this.role_host = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getIs_grantable() {
    return this.is_grantable;
  }

  public TApplicableRolesInfo setIs_grantable(@org.apache.thrift.annotation.Nullable java.lang.String is_grantable) {
    this.is_grantable = is_grantable;
    return this;
  }

  public void unsetIs_grantable() {
    this.is_grantable = null;
  }

  /** Returns true if field is_grantable is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_grantable() {
    return this.is_grantable != null;
  }

  public void setIs_grantableIsSet(boolean value) {
    if (!value) {
      this.is_grantable = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getIs_default() {
    return this.is_default;
  }

  public TApplicableRolesInfo setIs_default(@org.apache.thrift.annotation.Nullable java.lang.String is_default) {
    this.is_default = is_default;
    return this;
  }

  public void unsetIs_default() {
    this.is_default = null;
  }

  /** Returns true if field is_default is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_default() {
    return this.is_default != null;
  }

  public void setIs_defaultIsSet(boolean value) {
    if (!value) {
      this.is_default = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getIs_mandatory() {
    return this.is_mandatory;
  }

  public TApplicableRolesInfo setIs_mandatory(@org.apache.thrift.annotation.Nullable java.lang.String is_mandatory) {
    this.is_mandatory = is_mandatory;
    return this;
  }

  public void unsetIs_mandatory() {
    this.is_mandatory = null;
  }

  /** Returns true if field is_mandatory is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_mandatory() {
    return this.is_mandatory != null;
  }

  public void setIs_mandatoryIsSet(boolean value) {
    if (!value) {
      this.is_mandatory = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case USER:
      if (value == null) {
        unsetUser();
      } else {
        setUser((java.lang.String)value);
      }
      break;

    case HOST:
      if (value == null) {
        unsetHost();
      } else {
        setHost((java.lang.String)value);
      }
      break;

    case GRANTEE:
      if (value == null) {
        unsetGrantee();
      } else {
        setGrantee((java.lang.String)value);
      }
      break;

    case GRANTEE_HOST:
      if (value == null) {
        unsetGrantee_host();
      } else {
        setGrantee_host((java.lang.String)value);
      }
      break;

    case ROLE_NAME:
      if (value == null) {
        unsetRole_name();
      } else {
        setRole_name((java.lang.String)value);
      }
      break;

    case ROLE_HOST:
      if (value == null) {
        unsetRole_host();
      } else {
        setRole_host((java.lang.String)value);
      }
      break;

    case IS_GRANTABLE:
      if (value == null) {
        unsetIs_grantable();
      } else {
        setIs_grantable((java.lang.String)value);
      }
      break;

    case IS_DEFAULT:
      if (value == null) {
        unsetIs_default();
      } else {
        setIs_default((java.lang.String)value);
      }
      break;

    case IS_MANDATORY:
      if (value == null) {
        unsetIs_mandatory();
      } else {
        setIs_mandatory((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case USER:
      return getUser();

    case HOST:
      return getHost();

    case GRANTEE:
      return getGrantee();

    case GRANTEE_HOST:
      return getGrantee_host();

    case ROLE_NAME:
      return getRole_name();

    case ROLE_HOST:
      return getRole_host();

    case IS_GRANTABLE:
      return getIs_grantable();

    case IS_DEFAULT:
      return getIs_default();

    case IS_MANDATORY:
      return getIs_mandatory();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case USER:
      return isSetUser();
    case HOST:
      return isSetHost();
    case GRANTEE:
      return isSetGrantee();
    case GRANTEE_HOST:
      return isSetGrantee_host();
    case ROLE_NAME:
      return isSetRole_name();
    case ROLE_HOST:
      return isSetRole_host();
    case IS_GRANTABLE:
      return isSetIs_grantable();
    case IS_DEFAULT:
      return isSetIs_default();
    case IS_MANDATORY:
      return isSetIs_mandatory();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TApplicableRolesInfo)
      return this.equals((TApplicableRolesInfo)that);
    return false;
  }

  public boolean equals(TApplicableRolesInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_user = true && this.isSetUser();
    boolean that_present_user = true && that.isSetUser();
    if (this_present_user || that_present_user) {
      if (!(this_present_user && that_present_user))
        return false;
      if (!this.user.equals(that.user))
        return false;
    }

    boolean this_present_host = true && this.isSetHost();
    boolean that_present_host = true && that.isSetHost();
    if (this_present_host || that_present_host) {
      if (!(this_present_host && that_present_host))
        return false;
      if (!this.host.equals(that.host))
        return false;
    }

    boolean this_present_grantee = true && this.isSetGrantee();
    boolean that_present_grantee = true && that.isSetGrantee();
    if (this_present_grantee || that_present_grantee) {
      if (!(this_present_grantee && that_present_grantee))
        return false;
      if (!this.grantee.equals(that.grantee))
        return false;
    }

    boolean this_present_grantee_host = true && this.isSetGrantee_host();
    boolean that_present_grantee_host = true && that.isSetGrantee_host();
    if (this_present_grantee_host || that_present_grantee_host) {
      if (!(this_present_grantee_host && that_present_grantee_host))
        return false;
      if (!this.grantee_host.equals(that.grantee_host))
        return false;
    }

    boolean this_present_role_name = true && this.isSetRole_name();
    boolean that_present_role_name = true && that.isSetRole_name();
    if (this_present_role_name || that_present_role_name) {
      if (!(this_present_role_name && that_present_role_name))
        return false;
      if (!this.role_name.equals(that.role_name))
        return false;
    }

    boolean this_present_role_host = true && this.isSetRole_host();
    boolean that_present_role_host = true && that.isSetRole_host();
    if (this_present_role_host || that_present_role_host) {
      if (!(this_present_role_host && that_present_role_host))
        return false;
      if (!this.role_host.equals(that.role_host))
        return false;
    }

    boolean this_present_is_grantable = true && this.isSetIs_grantable();
    boolean that_present_is_grantable = true && that.isSetIs_grantable();
    if (this_present_is_grantable || that_present_is_grantable) {
      if (!(this_present_is_grantable && that_present_is_grantable))
        return false;
      if (!this.is_grantable.equals(that.is_grantable))
        return false;
    }

    boolean this_present_is_default = true && this.isSetIs_default();
    boolean that_present_is_default = true && that.isSetIs_default();
    if (this_present_is_default || that_present_is_default) {
      if (!(this_present_is_default && that_present_is_default))
        return false;
      if (!this.is_default.equals(that.is_default))
        return false;
    }

    boolean this_present_is_mandatory = true && this.isSetIs_mandatory();
    boolean that_present_is_mandatory = true && that.isSetIs_mandatory();
    if (this_present_is_mandatory || that_present_is_mandatory) {
      if (!(this_present_is_mandatory && that_present_is_mandatory))
        return false;
      if (!this.is_mandatory.equals(that.is_mandatory))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetUser()) ? 131071 : 524287);
    if (isSetUser())
      hashCode = hashCode * 8191 + user.hashCode();

    hashCode = hashCode * 8191 + ((isSetHost()) ? 131071 : 524287);
    if (isSetHost())
      hashCode = hashCode * 8191 + host.hashCode();

    hashCode = hashCode * 8191 + ((isSetGrantee()) ? 131071 : 524287);
    if (isSetGrantee())
      hashCode = hashCode * 8191 + grantee.hashCode();

    hashCode = hashCode * 8191 + ((isSetGrantee_host()) ? 131071 : 524287);
    if (isSetGrantee_host())
      hashCode = hashCode * 8191 + grantee_host.hashCode();

    hashCode = hashCode * 8191 + ((isSetRole_name()) ? 131071 : 524287);
    if (isSetRole_name())
      hashCode = hashCode * 8191 + role_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetRole_host()) ? 131071 : 524287);
    if (isSetRole_host())
      hashCode = hashCode * 8191 + role_host.hashCode();

    hashCode = hashCode * 8191 + ((isSetIs_grantable()) ? 131071 : 524287);
    if (isSetIs_grantable())
      hashCode = hashCode * 8191 + is_grantable.hashCode();

    hashCode = hashCode * 8191 + ((isSetIs_default()) ? 131071 : 524287);
    if (isSetIs_default())
      hashCode = hashCode * 8191 + is_default.hashCode();

    hashCode = hashCode * 8191 + ((isSetIs_mandatory()) ? 131071 : 524287);
    if (isSetIs_mandatory())
      hashCode = hashCode * 8191 + is_mandatory.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TApplicableRolesInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetUser(), other.isSetUser());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUser()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.user, other.user);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetHost(), other.isSetHost());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHost()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.host, other.host);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetGrantee(), other.isSetGrantee());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGrantee()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.grantee, other.grantee);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetGrantee_host(), other.isSetGrantee_host());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetGrantee_host()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.grantee_host, other.grantee_host);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetRole_name(), other.isSetRole_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRole_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.role_name, other.role_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetRole_host(), other.isSetRole_host());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRole_host()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.role_host, other.role_host);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIs_grantable(), other.isSetIs_grantable());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_grantable()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_grantable, other.is_grantable);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIs_default(), other.isSetIs_default());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_default()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_default, other.is_default);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIs_mandatory(), other.isSetIs_mandatory());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_mandatory()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_mandatory, other.is_mandatory);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TApplicableRolesInfo(");
    boolean first = true;

    if (isSetUser()) {
      sb.append("user:");
      if (this.user == null) {
        sb.append("null");
      } else {
        sb.append(this.user);
      }
      first = false;
    }
    if (isSetHost()) {
      if (!first) sb.append(", ");
      sb.append("host:");
      if (this.host == null) {
        sb.append("null");
      } else {
        sb.append(this.host);
      }
      first = false;
    }
    if (isSetGrantee()) {
      if (!first) sb.append(", ");
      sb.append("grantee:");
      if (this.grantee == null) {
        sb.append("null");
      } else {
        sb.append(this.grantee);
      }
      first = false;
    }
    if (isSetGrantee_host()) {
      if (!first) sb.append(", ");
      sb.append("grantee_host:");
      if (this.grantee_host == null) {
        sb.append("null");
      } else {
        sb.append(this.grantee_host);
      }
      first = false;
    }
    if (isSetRole_name()) {
      if (!first) sb.append(", ");
      sb.append("role_name:");
      if (this.role_name == null) {
        sb.append("null");
      } else {
        sb.append(this.role_name);
      }
      first = false;
    }
    if (isSetRole_host()) {
      if (!first) sb.append(", ");
      sb.append("role_host:");
      if (this.role_host == null) {
        sb.append("null");
      } else {
        sb.append(this.role_host);
      }
      first = false;
    }
    if (isSetIs_grantable()) {
      if (!first) sb.append(", ");
      sb.append("is_grantable:");
      if (this.is_grantable == null) {
        sb.append("null");
      } else {
        sb.append(this.is_grantable);
      }
      first = false;
    }
    if (isSetIs_default()) {
      if (!first) sb.append(", ");
      sb.append("is_default:");
      if (this.is_default == null) {
        sb.append("null");
      } else {
        sb.append(this.is_default);
      }
      first = false;
    }
    if (isSetIs_mandatory()) {
      if (!first) sb.append(", ");
      sb.append("is_mandatory:");
      if (this.is_mandatory == null) {
        sb.append("null");
      } else {
        sb.append(this.is_mandatory);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TApplicableRolesInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TApplicableRolesInfoStandardScheme getScheme() {
      return new TApplicableRolesInfoStandardScheme();
    }
  }

  private static class TApplicableRolesInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<TApplicableRolesInfo> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TApplicableRolesInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // USER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.user = iprot.readString();
              struct.setUserIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // HOST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.host = iprot.readString();
              struct.setHostIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // GRANTEE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.grantee = iprot.readString();
              struct.setGranteeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // GRANTEE_HOST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.grantee_host = iprot.readString();
              struct.setGrantee_hostIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // ROLE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.role_name = iprot.readString();
              struct.setRole_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ROLE_HOST
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.role_host = iprot.readString();
              struct.setRole_hostIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // IS_GRANTABLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.is_grantable = iprot.readString();
              struct.setIs_grantableIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // IS_DEFAULT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.is_default = iprot.readString();
              struct.setIs_defaultIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // IS_MANDATORY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.is_mandatory = iprot.readString();
              struct.setIs_mandatoryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TApplicableRolesInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.user != null) {
        if (struct.isSetUser()) {
          oprot.writeFieldBegin(USER_FIELD_DESC);
          oprot.writeString(struct.user);
          oprot.writeFieldEnd();
        }
      }
      if (struct.host != null) {
        if (struct.isSetHost()) {
          oprot.writeFieldBegin(HOST_FIELD_DESC);
          oprot.writeString(struct.host);
          oprot.writeFieldEnd();
        }
      }
      if (struct.grantee != null) {
        if (struct.isSetGrantee()) {
          oprot.writeFieldBegin(GRANTEE_FIELD_DESC);
          oprot.writeString(struct.grantee);
          oprot.writeFieldEnd();
        }
      }
      if (struct.grantee_host != null) {
        if (struct.isSetGrantee_host()) {
          oprot.writeFieldBegin(GRANTEE_HOST_FIELD_DESC);
          oprot.writeString(struct.grantee_host);
          oprot.writeFieldEnd();
        }
      }
      if (struct.role_name != null) {
        if (struct.isSetRole_name()) {
          oprot.writeFieldBegin(ROLE_NAME_FIELD_DESC);
          oprot.writeString(struct.role_name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.role_host != null) {
        if (struct.isSetRole_host()) {
          oprot.writeFieldBegin(ROLE_HOST_FIELD_DESC);
          oprot.writeString(struct.role_host);
          oprot.writeFieldEnd();
        }
      }
      if (struct.is_grantable != null) {
        if (struct.isSetIs_grantable()) {
          oprot.writeFieldBegin(IS_GRANTABLE_FIELD_DESC);
          oprot.writeString(struct.is_grantable);
          oprot.writeFieldEnd();
        }
      }
      if (struct.is_default != null) {
        if (struct.isSetIs_default()) {
          oprot.writeFieldBegin(IS_DEFAULT_FIELD_DESC);
          oprot.writeString(struct.is_default);
          oprot.writeFieldEnd();
        }
      }
      if (struct.is_mandatory != null) {
        if (struct.isSetIs_mandatory()) {
          oprot.writeFieldBegin(IS_MANDATORY_FIELD_DESC);
          oprot.writeString(struct.is_mandatory);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TApplicableRolesInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TApplicableRolesInfoTupleScheme getScheme() {
      return new TApplicableRolesInfoTupleScheme();
    }
  }

  private static class TApplicableRolesInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<TApplicableRolesInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TApplicableRolesInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetUser()) {
        optionals.set(0);
      }
      if (struct.isSetHost()) {
        optionals.set(1);
      }
      if (struct.isSetGrantee()) {
        optionals.set(2);
      }
      if (struct.isSetGrantee_host()) {
        optionals.set(3);
      }
      if (struct.isSetRole_name()) {
        optionals.set(4);
      }
      if (struct.isSetRole_host()) {
        optionals.set(5);
      }
      if (struct.isSetIs_grantable()) {
        optionals.set(6);
      }
      if (struct.isSetIs_default()) {
        optionals.set(7);
      }
      if (struct.isSetIs_mandatory()) {
        optionals.set(8);
      }
      oprot.writeBitSet(optionals, 9);
      if (struct.isSetUser()) {
        oprot.writeString(struct.user);
      }
      if (struct.isSetHost()) {
        oprot.writeString(struct.host);
      }
      if (struct.isSetGrantee()) {
        oprot.writeString(struct.grantee);
      }
      if (struct.isSetGrantee_host()) {
        oprot.writeString(struct.grantee_host);
      }
      if (struct.isSetRole_name()) {
        oprot.writeString(struct.role_name);
      }
      if (struct.isSetRole_host()) {
        oprot.writeString(struct.role_host);
      }
      if (struct.isSetIs_grantable()) {
        oprot.writeString(struct.is_grantable);
      }
      if (struct.isSetIs_default()) {
        oprot.writeString(struct.is_default);
      }
      if (struct.isSetIs_mandatory()) {
        oprot.writeString(struct.is_mandatory);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TApplicableRolesInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(9);
      if (incoming.get(0)) {
        struct.user = iprot.readString();
        struct.setUserIsSet(true);
      }
      if (incoming.get(1)) {
        struct.host = iprot.readString();
        struct.setHostIsSet(true);
      }
      if (incoming.get(2)) {
        struct.grantee = iprot.readString();
        struct.setGranteeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.grantee_host = iprot.readString();
        struct.setGrantee_hostIsSet(true);
      }
      if (incoming.get(4)) {
        struct.role_name = iprot.readString();
        struct.setRole_nameIsSet(true);
      }
      if (incoming.get(5)) {
        struct.role_host = iprot.readString();
        struct.setRole_hostIsSet(true);
      }
      if (incoming.get(6)) {
        struct.is_grantable = iprot.readString();
        struct.setIs_grantableIsSet(true);
      }
      if (incoming.get(7)) {
        struct.is_default = iprot.readString();
        struct.setIs_defaultIsSet(true);
      }
      if (incoming.get(8)) {
        struct.is_mandatory = iprot.readString();
        struct.setIs_mandatoryIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

