/**
 * Autogenerated by Thrift Compiler (0.20.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.starrocks.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.20.0)", date = "2025-06-16")
public class TFinishCheckpointRequest implements org.apache.thrift.TBase<TFinishCheckpointRequest, TFinishCheckpointRequest._Fields>, java.io.Serializable, Cloneable, Comparable<TFinishCheckpointRequest> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TFinishCheckpointRequest");

  private static final org.apache.thrift.protocol.TField JOURNAL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("journal_id", org.apache.thrift.protocol.TType.I64, (short)1);
  private static final org.apache.thrift.protocol.TField NODE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("node_name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField IS_SUCCESS_FIELD_DESC = new org.apache.thrift.protocol.TField("is_success", org.apache.thrift.protocol.TType.BOOL, (short)3);
  private static final org.apache.thrift.protocol.TField MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("message", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField IS_GLOBAL_STATE_MGR_FIELD_DESC = new org.apache.thrift.protocol.TField("is_global_state_mgr", org.apache.thrift.protocol.TType.BOOL, (short)5);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TFinishCheckpointRequestStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TFinishCheckpointRequestTupleSchemeFactory();

  public long journal_id; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String node_name; // optional
  public boolean is_success; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String message; // optional
  public boolean is_global_state_mgr; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    JOURNAL_ID((short)1, "journal_id"),
    NODE_NAME((short)2, "node_name"),
    IS_SUCCESS((short)3, "is_success"),
    MESSAGE((short)4, "message"),
    IS_GLOBAL_STATE_MGR((short)5, "is_global_state_mgr");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // JOURNAL_ID
          return JOURNAL_ID;
        case 2: // NODE_NAME
          return NODE_NAME;
        case 3: // IS_SUCCESS
          return IS_SUCCESS;
        case 4: // MESSAGE
          return MESSAGE;
        case 5: // IS_GLOBAL_STATE_MGR
          return IS_GLOBAL_STATE_MGR;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __JOURNAL_ID_ISSET_ID = 0;
  private static final int __IS_SUCCESS_ISSET_ID = 1;
  private static final int __IS_GLOBAL_STATE_MGR_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.JOURNAL_ID,_Fields.NODE_NAME,_Fields.IS_SUCCESS,_Fields.MESSAGE,_Fields.IS_GLOBAL_STATE_MGR};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.JOURNAL_ID, new org.apache.thrift.meta_data.FieldMetaData("journal_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.NODE_NAME, new org.apache.thrift.meta_data.FieldMetaData("node_name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_SUCCESS, new org.apache.thrift.meta_data.FieldMetaData("is_success", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    tmpMap.put(_Fields.MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("message", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.IS_GLOBAL_STATE_MGR, new org.apache.thrift.meta_data.FieldMetaData("is_global_state_mgr", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.BOOL)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TFinishCheckpointRequest.class, metaDataMap);
  }

  public TFinishCheckpointRequest() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TFinishCheckpointRequest(TFinishCheckpointRequest other) {
    __isset_bitfield = other.__isset_bitfield;
    this.journal_id = other.journal_id;
    if (other.isSetNode_name()) {
      this.node_name = other.node_name;
    }
    this.is_success = other.is_success;
    if (other.isSetMessage()) {
      this.message = other.message;
    }
    this.is_global_state_mgr = other.is_global_state_mgr;
  }

  @Override
  public TFinishCheckpointRequest deepCopy() {
    return new TFinishCheckpointRequest(this);
  }

  @Override
  public void clear() {
    setJournal_idIsSet(false);
    this.journal_id = 0;
    this.node_name = null;
    setIs_successIsSet(false);
    this.is_success = false;
    this.message = null;
    setIs_global_state_mgrIsSet(false);
    this.is_global_state_mgr = false;
  }

  public long getJournal_id() {
    return this.journal_id;
  }

  public TFinishCheckpointRequest setJournal_id(long journal_id) {
    this.journal_id = journal_id;
    setJournal_idIsSet(true);
    return this;
  }

  public void unsetJournal_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __JOURNAL_ID_ISSET_ID);
  }

  /** Returns true if field journal_id is set (has been assigned a value) and false otherwise */
  public boolean isSetJournal_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __JOURNAL_ID_ISSET_ID);
  }

  public void setJournal_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __JOURNAL_ID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getNode_name() {
    return this.node_name;
  }

  public TFinishCheckpointRequest setNode_name(@org.apache.thrift.annotation.Nullable java.lang.String node_name) {
    this.node_name = node_name;
    return this;
  }

  public void unsetNode_name() {
    this.node_name = null;
  }

  /** Returns true if field node_name is set (has been assigned a value) and false otherwise */
  public boolean isSetNode_name() {
    return this.node_name != null;
  }

  public void setNode_nameIsSet(boolean value) {
    if (!value) {
      this.node_name = null;
    }
  }

  public boolean isIs_success() {
    return this.is_success;
  }

  public TFinishCheckpointRequest setIs_success(boolean is_success) {
    this.is_success = is_success;
    setIs_successIsSet(true);
    return this;
  }

  public void unsetIs_success() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_SUCCESS_ISSET_ID);
  }

  /** Returns true if field is_success is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_success() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_SUCCESS_ISSET_ID);
  }

  public void setIs_successIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_SUCCESS_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getMessage() {
    return this.message;
  }

  public TFinishCheckpointRequest setMessage(@org.apache.thrift.annotation.Nullable java.lang.String message) {
    this.message = message;
    return this;
  }

  public void unsetMessage() {
    this.message = null;
  }

  /** Returns true if field message is set (has been assigned a value) and false otherwise */
  public boolean isSetMessage() {
    return this.message != null;
  }

  public void setMessageIsSet(boolean value) {
    if (!value) {
      this.message = null;
    }
  }

  public boolean isIs_global_state_mgr() {
    return this.is_global_state_mgr;
  }

  public TFinishCheckpointRequest setIs_global_state_mgr(boolean is_global_state_mgr) {
    this.is_global_state_mgr = is_global_state_mgr;
    setIs_global_state_mgrIsSet(true);
    return this;
  }

  public void unsetIs_global_state_mgr() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __IS_GLOBAL_STATE_MGR_ISSET_ID);
  }

  /** Returns true if field is_global_state_mgr is set (has been assigned a value) and false otherwise */
  public boolean isSetIs_global_state_mgr() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __IS_GLOBAL_STATE_MGR_ISSET_ID);
  }

  public void setIs_global_state_mgrIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __IS_GLOBAL_STATE_MGR_ISSET_ID, value);
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case JOURNAL_ID:
      if (value == null) {
        unsetJournal_id();
      } else {
        setJournal_id((java.lang.Long)value);
      }
      break;

    case NODE_NAME:
      if (value == null) {
        unsetNode_name();
      } else {
        setNode_name((java.lang.String)value);
      }
      break;

    case IS_SUCCESS:
      if (value == null) {
        unsetIs_success();
      } else {
        setIs_success((java.lang.Boolean)value);
      }
      break;

    case MESSAGE:
      if (value == null) {
        unsetMessage();
      } else {
        setMessage((java.lang.String)value);
      }
      break;

    case IS_GLOBAL_STATE_MGR:
      if (value == null) {
        unsetIs_global_state_mgr();
      } else {
        setIs_global_state_mgr((java.lang.Boolean)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case JOURNAL_ID:
      return getJournal_id();

    case NODE_NAME:
      return getNode_name();

    case IS_SUCCESS:
      return isIs_success();

    case MESSAGE:
      return getMessage();

    case IS_GLOBAL_STATE_MGR:
      return isIs_global_state_mgr();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case JOURNAL_ID:
      return isSetJournal_id();
    case NODE_NAME:
      return isSetNode_name();
    case IS_SUCCESS:
      return isSetIs_success();
    case MESSAGE:
      return isSetMessage();
    case IS_GLOBAL_STATE_MGR:
      return isSetIs_global_state_mgr();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TFinishCheckpointRequest)
      return this.equals((TFinishCheckpointRequest)that);
    return false;
  }

  public boolean equals(TFinishCheckpointRequest that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_journal_id = true && this.isSetJournal_id();
    boolean that_present_journal_id = true && that.isSetJournal_id();
    if (this_present_journal_id || that_present_journal_id) {
      if (!(this_present_journal_id && that_present_journal_id))
        return false;
      if (this.journal_id != that.journal_id)
        return false;
    }

    boolean this_present_node_name = true && this.isSetNode_name();
    boolean that_present_node_name = true && that.isSetNode_name();
    if (this_present_node_name || that_present_node_name) {
      if (!(this_present_node_name && that_present_node_name))
        return false;
      if (!this.node_name.equals(that.node_name))
        return false;
    }

    boolean this_present_is_success = true && this.isSetIs_success();
    boolean that_present_is_success = true && that.isSetIs_success();
    if (this_present_is_success || that_present_is_success) {
      if (!(this_present_is_success && that_present_is_success))
        return false;
      if (this.is_success != that.is_success)
        return false;
    }

    boolean this_present_message = true && this.isSetMessage();
    boolean that_present_message = true && that.isSetMessage();
    if (this_present_message || that_present_message) {
      if (!(this_present_message && that_present_message))
        return false;
      if (!this.message.equals(that.message))
        return false;
    }

    boolean this_present_is_global_state_mgr = true && this.isSetIs_global_state_mgr();
    boolean that_present_is_global_state_mgr = true && that.isSetIs_global_state_mgr();
    if (this_present_is_global_state_mgr || that_present_is_global_state_mgr) {
      if (!(this_present_is_global_state_mgr && that_present_is_global_state_mgr))
        return false;
      if (this.is_global_state_mgr != that.is_global_state_mgr)
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetJournal_id()) ? 131071 : 524287);
    if (isSetJournal_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(journal_id);

    hashCode = hashCode * 8191 + ((isSetNode_name()) ? 131071 : 524287);
    if (isSetNode_name())
      hashCode = hashCode * 8191 + node_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetIs_success()) ? 131071 : 524287);
    if (isSetIs_success())
      hashCode = hashCode * 8191 + ((is_success) ? 131071 : 524287);

    hashCode = hashCode * 8191 + ((isSetMessage()) ? 131071 : 524287);
    if (isSetMessage())
      hashCode = hashCode * 8191 + message.hashCode();

    hashCode = hashCode * 8191 + ((isSetIs_global_state_mgr()) ? 131071 : 524287);
    if (isSetIs_global_state_mgr())
      hashCode = hashCode * 8191 + ((is_global_state_mgr) ? 131071 : 524287);

    return hashCode;
  }

  @Override
  public int compareTo(TFinishCheckpointRequest other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetJournal_id(), other.isSetJournal_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetJournal_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.journal_id, other.journal_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetNode_name(), other.isSetNode_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetNode_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.node_name, other.node_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIs_success(), other.isSetIs_success());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_success()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_success, other.is_success);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetMessage(), other.isSetMessage());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMessage()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.message, other.message);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetIs_global_state_mgr(), other.isSetIs_global_state_mgr());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetIs_global_state_mgr()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.is_global_state_mgr, other.is_global_state_mgr);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TFinishCheckpointRequest(");
    boolean first = true;

    if (isSetJournal_id()) {
      sb.append("journal_id:");
      sb.append(this.journal_id);
      first = false;
    }
    if (isSetNode_name()) {
      if (!first) sb.append(", ");
      sb.append("node_name:");
      if (this.node_name == null) {
        sb.append("null");
      } else {
        sb.append(this.node_name);
      }
      first = false;
    }
    if (isSetIs_success()) {
      if (!first) sb.append(", ");
      sb.append("is_success:");
      sb.append(this.is_success);
      first = false;
    }
    if (isSetMessage()) {
      if (!first) sb.append(", ");
      sb.append("message:");
      if (this.message == null) {
        sb.append("null");
      } else {
        sb.append(this.message);
      }
      first = false;
    }
    if (isSetIs_global_state_mgr()) {
      if (!first) sb.append(", ");
      sb.append("is_global_state_mgr:");
      sb.append(this.is_global_state_mgr);
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TFinishCheckpointRequestStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TFinishCheckpointRequestStandardScheme getScheme() {
      return new TFinishCheckpointRequestStandardScheme();
    }
  }

  private static class TFinishCheckpointRequestStandardScheme extends org.apache.thrift.scheme.StandardScheme<TFinishCheckpointRequest> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TFinishCheckpointRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // JOURNAL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.journal_id = iprot.readI64();
              struct.setJournal_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // NODE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.node_name = iprot.readString();
              struct.setNode_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // IS_SUCCESS
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.is_success = iprot.readBool();
              struct.setIs_successIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.message = iprot.readString();
              struct.setMessageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // IS_GLOBAL_STATE_MGR
            if (schemeField.type == org.apache.thrift.protocol.TType.BOOL) {
              struct.is_global_state_mgr = iprot.readBool();
              struct.setIs_global_state_mgrIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TFinishCheckpointRequest struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.isSetJournal_id()) {
        oprot.writeFieldBegin(JOURNAL_ID_FIELD_DESC);
        oprot.writeI64(struct.journal_id);
        oprot.writeFieldEnd();
      }
      if (struct.node_name != null) {
        if (struct.isSetNode_name()) {
          oprot.writeFieldBegin(NODE_NAME_FIELD_DESC);
          oprot.writeString(struct.node_name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIs_success()) {
        oprot.writeFieldBegin(IS_SUCCESS_FIELD_DESC);
        oprot.writeBool(struct.is_success);
        oprot.writeFieldEnd();
      }
      if (struct.message != null) {
        if (struct.isSetMessage()) {
          oprot.writeFieldBegin(MESSAGE_FIELD_DESC);
          oprot.writeString(struct.message);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetIs_global_state_mgr()) {
        oprot.writeFieldBegin(IS_GLOBAL_STATE_MGR_FIELD_DESC);
        oprot.writeBool(struct.is_global_state_mgr);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TFinishCheckpointRequestTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TFinishCheckpointRequestTupleScheme getScheme() {
      return new TFinishCheckpointRequestTupleScheme();
    }
  }

  private static class TFinishCheckpointRequestTupleScheme extends org.apache.thrift.scheme.TupleScheme<TFinishCheckpointRequest> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TFinishCheckpointRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetJournal_id()) {
        optionals.set(0);
      }
      if (struct.isSetNode_name()) {
        optionals.set(1);
      }
      if (struct.isSetIs_success()) {
        optionals.set(2);
      }
      if (struct.isSetMessage()) {
        optionals.set(3);
      }
      if (struct.isSetIs_global_state_mgr()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetJournal_id()) {
        oprot.writeI64(struct.journal_id);
      }
      if (struct.isSetNode_name()) {
        oprot.writeString(struct.node_name);
      }
      if (struct.isSetIs_success()) {
        oprot.writeBool(struct.is_success);
      }
      if (struct.isSetMessage()) {
        oprot.writeString(struct.message);
      }
      if (struct.isSetIs_global_state_mgr()) {
        oprot.writeBool(struct.is_global_state_mgr);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TFinishCheckpointRequest struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.journal_id = iprot.readI64();
        struct.setJournal_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.node_name = iprot.readString();
        struct.setNode_nameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.is_success = iprot.readBool();
        struct.setIs_successIsSet(true);
      }
      if (incoming.get(3)) {
        struct.message = iprot.readString();
        struct.setMessageIsSet(true);
      }
      if (incoming.get(4)) {
        struct.is_global_state_mgr = iprot.readBool();
        struct.setIs_global_state_mgrIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

