/**
 * Autogenerated by Thrift Compiler (0.20.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.starrocks.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.20.0)", date = "2025-06-16")
public class TPartitionMetaResponse implements org.apache.thrift.TBase<TPartitionMetaResponse, TPartitionMetaResponse._Fields>, java.io.Serializable, Cloneable, Comparable<TPartitionMetaResponse> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TPartitionMetaResponse");

  private static final org.apache.thrift.protocol.TField STATUS_FIELD_DESC = new org.apache.thrift.protocol.TField("status", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField TABLET_ID_PARTITION_META_INDEX_FIELD_DESC = new org.apache.thrift.protocol.TField("tablet_id_partition_meta_index", org.apache.thrift.protocol.TType.MAP, (short)2);
  private static final org.apache.thrift.protocol.TField PARTITION_METAS_FIELD_DESC = new org.apache.thrift.protocol.TField("partition_metas", org.apache.thrift.protocol.TType.LIST, (short)3);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TPartitionMetaResponseStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TPartitionMetaResponseTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable com.starrocks.thrift.TStatus status; // optional
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Long,java.lang.Integer> tablet_id_partition_meta_index; // optional
  public @org.apache.thrift.annotation.Nullable java.util.List<TPartitionMeta> partition_metas; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    STATUS((short)1, "status"),
    TABLET_ID_PARTITION_META_INDEX((short)2, "tablet_id_partition_meta_index"),
    PARTITION_METAS((short)3, "partition_metas");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // STATUS
          return STATUS;
        case 2: // TABLET_ID_PARTITION_META_INDEX
          return TABLET_ID_PARTITION_META_INDEX;
        case 3: // PARTITION_METAS
          return PARTITION_METAS;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.STATUS,_Fields.TABLET_ID_PARTITION_META_INDEX,_Fields.PARTITION_METAS};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.STATUS, new org.apache.thrift.meta_data.FieldMetaData("status", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, com.starrocks.thrift.TStatus.class)));
    tmpMap.put(_Fields.TABLET_ID_PARTITION_META_INDEX, new org.apache.thrift.meta_data.FieldMetaData("tablet_id_partition_meta_index", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    tmpMap.put(_Fields.PARTITION_METAS, new org.apache.thrift.meta_data.FieldMetaData("partition_metas", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TPartitionMeta.class))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TPartitionMetaResponse.class, metaDataMap);
  }

  public TPartitionMetaResponse() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TPartitionMetaResponse(TPartitionMetaResponse other) {
    if (other.isSetStatus()) {
      this.status = new com.starrocks.thrift.TStatus(other.status);
    }
    if (other.isSetTablet_id_partition_meta_index()) {
      java.util.Map<java.lang.Long,java.lang.Integer> __this__tablet_id_partition_meta_index = new java.util.HashMap<java.lang.Long,java.lang.Integer>(other.tablet_id_partition_meta_index);
      this.tablet_id_partition_meta_index = __this__tablet_id_partition_meta_index;
    }
    if (other.isSetPartition_metas()) {
      java.util.List<TPartitionMeta> __this__partition_metas = new java.util.ArrayList<TPartitionMeta>(other.partition_metas.size());
      for (TPartitionMeta other_element : other.partition_metas) {
        __this__partition_metas.add(new TPartitionMeta(other_element));
      }
      this.partition_metas = __this__partition_metas;
    }
  }

  @Override
  public TPartitionMetaResponse deepCopy() {
    return new TPartitionMetaResponse(this);
  }

  @Override
  public void clear() {
    this.status = null;
    this.tablet_id_partition_meta_index = null;
    this.partition_metas = null;
  }

  @org.apache.thrift.annotation.Nullable
  public com.starrocks.thrift.TStatus getStatus() {
    return this.status;
  }

  public TPartitionMetaResponse setStatus(@org.apache.thrift.annotation.Nullable com.starrocks.thrift.TStatus status) {
    this.status = status;
    return this;
  }

  public void unsetStatus() {
    this.status = null;
  }

  /** Returns true if field status is set (has been assigned a value) and false otherwise */
  public boolean isSetStatus() {
    return this.status != null;
  }

  public void setStatusIsSet(boolean value) {
    if (!value) {
      this.status = null;
    }
  }

  public int getTablet_id_partition_meta_indexSize() {
    return (this.tablet_id_partition_meta_index == null) ? 0 : this.tablet_id_partition_meta_index.size();
  }

  public void putToTablet_id_partition_meta_index(long key, int val) {
    if (this.tablet_id_partition_meta_index == null) {
      this.tablet_id_partition_meta_index = new java.util.HashMap<java.lang.Long,java.lang.Integer>();
    }
    this.tablet_id_partition_meta_index.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.Long,java.lang.Integer> getTablet_id_partition_meta_index() {
    return this.tablet_id_partition_meta_index;
  }

  public TPartitionMetaResponse setTablet_id_partition_meta_index(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.Long,java.lang.Integer> tablet_id_partition_meta_index) {
    this.tablet_id_partition_meta_index = tablet_id_partition_meta_index;
    return this;
  }

  public void unsetTablet_id_partition_meta_index() {
    this.tablet_id_partition_meta_index = null;
  }

  /** Returns true if field tablet_id_partition_meta_index is set (has been assigned a value) and false otherwise */
  public boolean isSetTablet_id_partition_meta_index() {
    return this.tablet_id_partition_meta_index != null;
  }

  public void setTablet_id_partition_meta_indexIsSet(boolean value) {
    if (!value) {
      this.tablet_id_partition_meta_index = null;
    }
  }

  public int getPartition_metasSize() {
    return (this.partition_metas == null) ? 0 : this.partition_metas.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<TPartitionMeta> getPartition_metasIterator() {
    return (this.partition_metas == null) ? null : this.partition_metas.iterator();
  }

  public void addToPartition_metas(TPartitionMeta elem) {
    if (this.partition_metas == null) {
      this.partition_metas = new java.util.ArrayList<TPartitionMeta>();
    }
    this.partition_metas.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<TPartitionMeta> getPartition_metas() {
    return this.partition_metas;
  }

  public TPartitionMetaResponse setPartition_metas(@org.apache.thrift.annotation.Nullable java.util.List<TPartitionMeta> partition_metas) {
    this.partition_metas = partition_metas;
    return this;
  }

  public void unsetPartition_metas() {
    this.partition_metas = null;
  }

  /** Returns true if field partition_metas is set (has been assigned a value) and false otherwise */
  public boolean isSetPartition_metas() {
    return this.partition_metas != null;
  }

  public void setPartition_metasIsSet(boolean value) {
    if (!value) {
      this.partition_metas = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case STATUS:
      if (value == null) {
        unsetStatus();
      } else {
        setStatus((com.starrocks.thrift.TStatus)value);
      }
      break;

    case TABLET_ID_PARTITION_META_INDEX:
      if (value == null) {
        unsetTablet_id_partition_meta_index();
      } else {
        setTablet_id_partition_meta_index((java.util.Map<java.lang.Long,java.lang.Integer>)value);
      }
      break;

    case PARTITION_METAS:
      if (value == null) {
        unsetPartition_metas();
      } else {
        setPartition_metas((java.util.List<TPartitionMeta>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case STATUS:
      return getStatus();

    case TABLET_ID_PARTITION_META_INDEX:
      return getTablet_id_partition_meta_index();

    case PARTITION_METAS:
      return getPartition_metas();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case STATUS:
      return isSetStatus();
    case TABLET_ID_PARTITION_META_INDEX:
      return isSetTablet_id_partition_meta_index();
    case PARTITION_METAS:
      return isSetPartition_metas();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TPartitionMetaResponse)
      return this.equals((TPartitionMetaResponse)that);
    return false;
  }

  public boolean equals(TPartitionMetaResponse that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_status = true && this.isSetStatus();
    boolean that_present_status = true && that.isSetStatus();
    if (this_present_status || that_present_status) {
      if (!(this_present_status && that_present_status))
        return false;
      if (!this.status.equals(that.status))
        return false;
    }

    boolean this_present_tablet_id_partition_meta_index = true && this.isSetTablet_id_partition_meta_index();
    boolean that_present_tablet_id_partition_meta_index = true && that.isSetTablet_id_partition_meta_index();
    if (this_present_tablet_id_partition_meta_index || that_present_tablet_id_partition_meta_index) {
      if (!(this_present_tablet_id_partition_meta_index && that_present_tablet_id_partition_meta_index))
        return false;
      if (!this.tablet_id_partition_meta_index.equals(that.tablet_id_partition_meta_index))
        return false;
    }

    boolean this_present_partition_metas = true && this.isSetPartition_metas();
    boolean that_present_partition_metas = true && that.isSetPartition_metas();
    if (this_present_partition_metas || that_present_partition_metas) {
      if (!(this_present_partition_metas && that_present_partition_metas))
        return false;
      if (!this.partition_metas.equals(that.partition_metas))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetStatus()) ? 131071 : 524287);
    if (isSetStatus())
      hashCode = hashCode * 8191 + status.hashCode();

    hashCode = hashCode * 8191 + ((isSetTablet_id_partition_meta_index()) ? 131071 : 524287);
    if (isSetTablet_id_partition_meta_index())
      hashCode = hashCode * 8191 + tablet_id_partition_meta_index.hashCode();

    hashCode = hashCode * 8191 + ((isSetPartition_metas()) ? 131071 : 524287);
    if (isSetPartition_metas())
      hashCode = hashCode * 8191 + partition_metas.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TPartitionMetaResponse other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetStatus(), other.isSetStatus());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStatus()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.status, other.status);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTablet_id_partition_meta_index(), other.isSetTablet_id_partition_meta_index());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTablet_id_partition_meta_index()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tablet_id_partition_meta_index, other.tablet_id_partition_meta_index);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPartition_metas(), other.isSetPartition_metas());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPartition_metas()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.partition_metas, other.partition_metas);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TPartitionMetaResponse(");
    boolean first = true;

    if (isSetStatus()) {
      sb.append("status:");
      if (this.status == null) {
        sb.append("null");
      } else {
        sb.append(this.status);
      }
      first = false;
    }
    if (isSetTablet_id_partition_meta_index()) {
      if (!first) sb.append(", ");
      sb.append("tablet_id_partition_meta_index:");
      if (this.tablet_id_partition_meta_index == null) {
        sb.append("null");
      } else {
        sb.append(this.tablet_id_partition_meta_index);
      }
      first = false;
    }
    if (isSetPartition_metas()) {
      if (!first) sb.append(", ");
      sb.append("partition_metas:");
      if (this.partition_metas == null) {
        sb.append("null");
      } else {
        sb.append(this.partition_metas);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (status != null) {
      status.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TPartitionMetaResponseStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TPartitionMetaResponseStandardScheme getScheme() {
      return new TPartitionMetaResponseStandardScheme();
    }
  }

  private static class TPartitionMetaResponseStandardScheme extends org.apache.thrift.scheme.StandardScheme<TPartitionMetaResponse> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TPartitionMetaResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // STATUS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.status = new com.starrocks.thrift.TStatus();
              struct.status.read(iprot);
              struct.setStatusIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // TABLET_ID_PARTITION_META_INDEX
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map902 = iprot.readMapBegin();
                struct.tablet_id_partition_meta_index = new java.util.HashMap<java.lang.Long,java.lang.Integer>(2*_map902.size);
                long _key903;
                int _val904;
                for (int _i905 = 0; _i905 < _map902.size; ++_i905)
                {
                  _key903 = iprot.readI64();
                  _val904 = iprot.readI32();
                  struct.tablet_id_partition_meta_index.put(_key903, _val904);
                }
                iprot.readMapEnd();
              }
              struct.setTablet_id_partition_meta_indexIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // PARTITION_METAS
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list906 = iprot.readListBegin();
                struct.partition_metas = new java.util.ArrayList<TPartitionMeta>(_list906.size);
                @org.apache.thrift.annotation.Nullable TPartitionMeta _elem907;
                for (int _i908 = 0; _i908 < _list906.size; ++_i908)
                {
                  _elem907 = new TPartitionMeta();
                  _elem907.read(iprot);
                  struct.partition_metas.add(_elem907);
                }
                iprot.readListEnd();
              }
              struct.setPartition_metasIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TPartitionMetaResponse struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.status != null) {
        if (struct.isSetStatus()) {
          oprot.writeFieldBegin(STATUS_FIELD_DESC);
          struct.status.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.tablet_id_partition_meta_index != null) {
        if (struct.isSetTablet_id_partition_meta_index()) {
          oprot.writeFieldBegin(TABLET_ID_PARTITION_META_INDEX_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.I64, org.apache.thrift.protocol.TType.I32, struct.tablet_id_partition_meta_index.size()));
            for (java.util.Map.Entry<java.lang.Long, java.lang.Integer> _iter909 : struct.tablet_id_partition_meta_index.entrySet())
            {
              oprot.writeI64(_iter909.getKey());
              oprot.writeI32(_iter909.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.partition_metas != null) {
        if (struct.isSetPartition_metas()) {
          oprot.writeFieldBegin(PARTITION_METAS_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.partition_metas.size()));
            for (TPartitionMeta _iter910 : struct.partition_metas)
            {
              _iter910.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TPartitionMetaResponseTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TPartitionMetaResponseTupleScheme getScheme() {
      return new TPartitionMetaResponseTupleScheme();
    }
  }

  private static class TPartitionMetaResponseTupleScheme extends org.apache.thrift.scheme.TupleScheme<TPartitionMetaResponse> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TPartitionMetaResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetStatus()) {
        optionals.set(0);
      }
      if (struct.isSetTablet_id_partition_meta_index()) {
        optionals.set(1);
      }
      if (struct.isSetPartition_metas()) {
        optionals.set(2);
      }
      oprot.writeBitSet(optionals, 3);
      if (struct.isSetStatus()) {
        struct.status.write(oprot);
      }
      if (struct.isSetTablet_id_partition_meta_index()) {
        {
          oprot.writeI32(struct.tablet_id_partition_meta_index.size());
          for (java.util.Map.Entry<java.lang.Long, java.lang.Integer> _iter911 : struct.tablet_id_partition_meta_index.entrySet())
          {
            oprot.writeI64(_iter911.getKey());
            oprot.writeI32(_iter911.getValue());
          }
        }
      }
      if (struct.isSetPartition_metas()) {
        {
          oprot.writeI32(struct.partition_metas.size());
          for (TPartitionMeta _iter912 : struct.partition_metas)
          {
            _iter912.write(oprot);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TPartitionMetaResponse struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(3);
      if (incoming.get(0)) {
        struct.status = new com.starrocks.thrift.TStatus();
        struct.status.read(iprot);
        struct.setStatusIsSet(true);
      }
      if (incoming.get(1)) {
        {
          org.apache.thrift.protocol.TMap _map913 = iprot.readMapBegin(org.apache.thrift.protocol.TType.I64, org.apache.thrift.protocol.TType.I32); 
          struct.tablet_id_partition_meta_index = new java.util.HashMap<java.lang.Long,java.lang.Integer>(2*_map913.size);
          long _key914;
          int _val915;
          for (int _i916 = 0; _i916 < _map913.size; ++_i916)
          {
            _key914 = iprot.readI64();
            _val915 = iprot.readI32();
            struct.tablet_id_partition_meta_index.put(_key914, _val915);
          }
        }
        struct.setTablet_id_partition_meta_indexIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list917 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
          struct.partition_metas = new java.util.ArrayList<TPartitionMeta>(_list917.size);
          @org.apache.thrift.annotation.Nullable TPartitionMeta _elem918;
          for (int _i919 = 0; _i919 < _list917.size; ++_i919)
          {
            _elem918 = new TPartitionMeta();
            _elem918.read(iprot);
            struct.partition_metas.add(_elem918);
          }
        }
        struct.setPartition_metasIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

