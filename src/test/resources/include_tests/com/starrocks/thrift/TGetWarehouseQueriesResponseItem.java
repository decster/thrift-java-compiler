/**
 * Autogenerated by Thrift Compiler (0.20.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.starrocks.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.20.0)", date = "2025-06-16")
public class TGetWarehouseQueriesResponseItem implements org.apache.thrift.TBase<TGetWarehouseQueriesResponseItem, TGetWarehouseQueriesResponseItem._Fields>, java.io.Serializable, Cloneable, Comparable<TGetWarehouseQueriesResponseItem> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TGetWarehouseQueriesResponseItem");

  private static final org.apache.thrift.protocol.TField WAREHOUSE_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("warehouse_id", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField WAREHOUSE_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("warehouse_name", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField QUERY_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("query_id", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField STATE_FIELD_DESC = new org.apache.thrift.protocol.TField("state", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField EST_COSTS_SLOTS_FIELD_DESC = new org.apache.thrift.protocol.TField("est_costs_slots", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ALLOCATE_SLOTS_FIELD_DESC = new org.apache.thrift.protocol.TField("allocate_slots", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField QUEUED_WAIT_SECONDS_FIELD_DESC = new org.apache.thrift.protocol.TField("queued_wait_seconds", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField QUERY_FIELD_DESC = new org.apache.thrift.protocol.TField("query", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField QUERY_START_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("query_start_time", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField QUERY_END_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("query_end_time", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField QUERY_DURATION_FIELD_DESC = new org.apache.thrift.protocol.TField("query_duration", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField EXTRA_MESSAGE_FIELD_DESC = new org.apache.thrift.protocol.TField("extra_message", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TGetWarehouseQueriesResponseItemStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TGetWarehouseQueriesResponseItemTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String warehouse_id; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String warehouse_name; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String query_id; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String state; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String est_costs_slots; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String allocate_slots; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String queued_wait_seconds; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String query; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String query_start_time; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String query_end_time; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String query_duration; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String extra_message; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    WAREHOUSE_ID((short)1, "warehouse_id"),
    WAREHOUSE_NAME((short)2, "warehouse_name"),
    QUERY_ID((short)3, "query_id"),
    STATE((short)4, "state"),
    EST_COSTS_SLOTS((short)5, "est_costs_slots"),
    ALLOCATE_SLOTS((short)6, "allocate_slots"),
    QUEUED_WAIT_SECONDS((short)7, "queued_wait_seconds"),
    QUERY((short)8, "query"),
    QUERY_START_TIME((short)9, "query_start_time"),
    QUERY_END_TIME((short)10, "query_end_time"),
    QUERY_DURATION((short)11, "query_duration"),
    EXTRA_MESSAGE((short)12, "extra_message");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // WAREHOUSE_ID
          return WAREHOUSE_ID;
        case 2: // WAREHOUSE_NAME
          return WAREHOUSE_NAME;
        case 3: // QUERY_ID
          return QUERY_ID;
        case 4: // STATE
          return STATE;
        case 5: // EST_COSTS_SLOTS
          return EST_COSTS_SLOTS;
        case 6: // ALLOCATE_SLOTS
          return ALLOCATE_SLOTS;
        case 7: // QUEUED_WAIT_SECONDS
          return QUEUED_WAIT_SECONDS;
        case 8: // QUERY
          return QUERY;
        case 9: // QUERY_START_TIME
          return QUERY_START_TIME;
        case 10: // QUERY_END_TIME
          return QUERY_END_TIME;
        case 11: // QUERY_DURATION
          return QUERY_DURATION;
        case 12: // EXTRA_MESSAGE
          return EXTRA_MESSAGE;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.WAREHOUSE_ID,_Fields.WAREHOUSE_NAME,_Fields.QUERY_ID,_Fields.STATE,_Fields.EST_COSTS_SLOTS,_Fields.ALLOCATE_SLOTS,_Fields.QUEUED_WAIT_SECONDS,_Fields.QUERY,_Fields.QUERY_START_TIME,_Fields.QUERY_END_TIME,_Fields.QUERY_DURATION,_Fields.EXTRA_MESSAGE};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.WAREHOUSE_ID, new org.apache.thrift.meta_data.FieldMetaData("warehouse_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.WAREHOUSE_NAME, new org.apache.thrift.meta_data.FieldMetaData("warehouse_name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUERY_ID, new org.apache.thrift.meta_data.FieldMetaData("query_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STATE, new org.apache.thrift.meta_data.FieldMetaData("state", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EST_COSTS_SLOTS, new org.apache.thrift.meta_data.FieldMetaData("est_costs_slots", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ALLOCATE_SLOTS, new org.apache.thrift.meta_data.FieldMetaData("allocate_slots", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUEUED_WAIT_SECONDS, new org.apache.thrift.meta_data.FieldMetaData("queued_wait_seconds", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUERY, new org.apache.thrift.meta_data.FieldMetaData("query", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUERY_START_TIME, new org.apache.thrift.meta_data.FieldMetaData("query_start_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUERY_END_TIME, new org.apache.thrift.meta_data.FieldMetaData("query_end_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.QUERY_DURATION, new org.apache.thrift.meta_data.FieldMetaData("query_duration", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.EXTRA_MESSAGE, new org.apache.thrift.meta_data.FieldMetaData("extra_message", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TGetWarehouseQueriesResponseItem.class, metaDataMap);
  }

  public TGetWarehouseQueriesResponseItem() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TGetWarehouseQueriesResponseItem(TGetWarehouseQueriesResponseItem other) {
    if (other.isSetWarehouse_id()) {
      this.warehouse_id = other.warehouse_id;
    }
    if (other.isSetWarehouse_name()) {
      this.warehouse_name = other.warehouse_name;
    }
    if (other.isSetQuery_id()) {
      this.query_id = other.query_id;
    }
    if (other.isSetState()) {
      this.state = other.state;
    }
    if (other.isSetEst_costs_slots()) {
      this.est_costs_slots = other.est_costs_slots;
    }
    if (other.isSetAllocate_slots()) {
      this.allocate_slots = other.allocate_slots;
    }
    if (other.isSetQueued_wait_seconds()) {
      this.queued_wait_seconds = other.queued_wait_seconds;
    }
    if (other.isSetQuery()) {
      this.query = other.query;
    }
    if (other.isSetQuery_start_time()) {
      this.query_start_time = other.query_start_time;
    }
    if (other.isSetQuery_end_time()) {
      this.query_end_time = other.query_end_time;
    }
    if (other.isSetQuery_duration()) {
      this.query_duration = other.query_duration;
    }
    if (other.isSetExtra_message()) {
      this.extra_message = other.extra_message;
    }
  }

  @Override
  public TGetWarehouseQueriesResponseItem deepCopy() {
    return new TGetWarehouseQueriesResponseItem(this);
  }

  @Override
  public void clear() {
    this.warehouse_id = null;
    this.warehouse_name = null;
    this.query_id = null;
    this.state = null;
    this.est_costs_slots = null;
    this.allocate_slots = null;
    this.queued_wait_seconds = null;
    this.query = null;
    this.query_start_time = null;
    this.query_end_time = null;
    this.query_duration = null;
    this.extra_message = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getWarehouse_id() {
    return this.warehouse_id;
  }

  public TGetWarehouseQueriesResponseItem setWarehouse_id(@org.apache.thrift.annotation.Nullable java.lang.String warehouse_id) {
    this.warehouse_id = warehouse_id;
    return this;
  }

  public void unsetWarehouse_id() {
    this.warehouse_id = null;
  }

  /** Returns true if field warehouse_id is set (has been assigned a value) and false otherwise */
  public boolean isSetWarehouse_id() {
    return this.warehouse_id != null;
  }

  public void setWarehouse_idIsSet(boolean value) {
    if (!value) {
      this.warehouse_id = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getWarehouse_name() {
    return this.warehouse_name;
  }

  public TGetWarehouseQueriesResponseItem setWarehouse_name(@org.apache.thrift.annotation.Nullable java.lang.String warehouse_name) {
    this.warehouse_name = warehouse_name;
    return this;
  }

  public void unsetWarehouse_name() {
    this.warehouse_name = null;
  }

  /** Returns true if field warehouse_name is set (has been assigned a value) and false otherwise */
  public boolean isSetWarehouse_name() {
    return this.warehouse_name != null;
  }

  public void setWarehouse_nameIsSet(boolean value) {
    if (!value) {
      this.warehouse_name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getQuery_id() {
    return this.query_id;
  }

  public TGetWarehouseQueriesResponseItem setQuery_id(@org.apache.thrift.annotation.Nullable java.lang.String query_id) {
    this.query_id = query_id;
    return this;
  }

  public void unsetQuery_id() {
    this.query_id = null;
  }

  /** Returns true if field query_id is set (has been assigned a value) and false otherwise */
  public boolean isSetQuery_id() {
    return this.query_id != null;
  }

  public void setQuery_idIsSet(boolean value) {
    if (!value) {
      this.query_id = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getState() {
    return this.state;
  }

  public TGetWarehouseQueriesResponseItem setState(@org.apache.thrift.annotation.Nullable java.lang.String state) {
    this.state = state;
    return this;
  }

  public void unsetState() {
    this.state = null;
  }

  /** Returns true if field state is set (has been assigned a value) and false otherwise */
  public boolean isSetState() {
    return this.state != null;
  }

  public void setStateIsSet(boolean value) {
    if (!value) {
      this.state = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getEst_costs_slots() {
    return this.est_costs_slots;
  }

  public TGetWarehouseQueriesResponseItem setEst_costs_slots(@org.apache.thrift.annotation.Nullable java.lang.String est_costs_slots) {
    this.est_costs_slots = est_costs_slots;
    return this;
  }

  public void unsetEst_costs_slots() {
    this.est_costs_slots = null;
  }

  /** Returns true if field est_costs_slots is set (has been assigned a value) and false otherwise */
  public boolean isSetEst_costs_slots() {
    return this.est_costs_slots != null;
  }

  public void setEst_costs_slotsIsSet(boolean value) {
    if (!value) {
      this.est_costs_slots = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getAllocate_slots() {
    return this.allocate_slots;
  }

  public TGetWarehouseQueriesResponseItem setAllocate_slots(@org.apache.thrift.annotation.Nullable java.lang.String allocate_slots) {
    this.allocate_slots = allocate_slots;
    return this;
  }

  public void unsetAllocate_slots() {
    this.allocate_slots = null;
  }

  /** Returns true if field allocate_slots is set (has been assigned a value) and false otherwise */
  public boolean isSetAllocate_slots() {
    return this.allocate_slots != null;
  }

  public void setAllocate_slotsIsSet(boolean value) {
    if (!value) {
      this.allocate_slots = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getQueued_wait_seconds() {
    return this.queued_wait_seconds;
  }

  public TGetWarehouseQueriesResponseItem setQueued_wait_seconds(@org.apache.thrift.annotation.Nullable java.lang.String queued_wait_seconds) {
    this.queued_wait_seconds = queued_wait_seconds;
    return this;
  }

  public void unsetQueued_wait_seconds() {
    this.queued_wait_seconds = null;
  }

  /** Returns true if field queued_wait_seconds is set (has been assigned a value) and false otherwise */
  public boolean isSetQueued_wait_seconds() {
    return this.queued_wait_seconds != null;
  }

  public void setQueued_wait_secondsIsSet(boolean value) {
    if (!value) {
      this.queued_wait_seconds = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getQuery() {
    return this.query;
  }

  public TGetWarehouseQueriesResponseItem setQuery(@org.apache.thrift.annotation.Nullable java.lang.String query) {
    this.query = query;
    return this;
  }

  public void unsetQuery() {
    this.query = null;
  }

  /** Returns true if field query is set (has been assigned a value) and false otherwise */
  public boolean isSetQuery() {
    return this.query != null;
  }

  public void setQueryIsSet(boolean value) {
    if (!value) {
      this.query = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getQuery_start_time() {
    return this.query_start_time;
  }

  public TGetWarehouseQueriesResponseItem setQuery_start_time(@org.apache.thrift.annotation.Nullable java.lang.String query_start_time) {
    this.query_start_time = query_start_time;
    return this;
  }

  public void unsetQuery_start_time() {
    this.query_start_time = null;
  }

  /** Returns true if field query_start_time is set (has been assigned a value) and false otherwise */
  public boolean isSetQuery_start_time() {
    return this.query_start_time != null;
  }

  public void setQuery_start_timeIsSet(boolean value) {
    if (!value) {
      this.query_start_time = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getQuery_end_time() {
    return this.query_end_time;
  }

  public TGetWarehouseQueriesResponseItem setQuery_end_time(@org.apache.thrift.annotation.Nullable java.lang.String query_end_time) {
    this.query_end_time = query_end_time;
    return this;
  }

  public void unsetQuery_end_time() {
    this.query_end_time = null;
  }

  /** Returns true if field query_end_time is set (has been assigned a value) and false otherwise */
  public boolean isSetQuery_end_time() {
    return this.query_end_time != null;
  }

  public void setQuery_end_timeIsSet(boolean value) {
    if (!value) {
      this.query_end_time = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getQuery_duration() {
    return this.query_duration;
  }

  public TGetWarehouseQueriesResponseItem setQuery_duration(@org.apache.thrift.annotation.Nullable java.lang.String query_duration) {
    this.query_duration = query_duration;
    return this;
  }

  public void unsetQuery_duration() {
    this.query_duration = null;
  }

  /** Returns true if field query_duration is set (has been assigned a value) and false otherwise */
  public boolean isSetQuery_duration() {
    return this.query_duration != null;
  }

  public void setQuery_durationIsSet(boolean value) {
    if (!value) {
      this.query_duration = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getExtra_message() {
    return this.extra_message;
  }

  public TGetWarehouseQueriesResponseItem setExtra_message(@org.apache.thrift.annotation.Nullable java.lang.String extra_message) {
    this.extra_message = extra_message;
    return this;
  }

  public void unsetExtra_message() {
    this.extra_message = null;
  }

  /** Returns true if field extra_message is set (has been assigned a value) and false otherwise */
  public boolean isSetExtra_message() {
    return this.extra_message != null;
  }

  public void setExtra_messageIsSet(boolean value) {
    if (!value) {
      this.extra_message = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case WAREHOUSE_ID:
      if (value == null) {
        unsetWarehouse_id();
      } else {
        setWarehouse_id((java.lang.String)value);
      }
      break;

    case WAREHOUSE_NAME:
      if (value == null) {
        unsetWarehouse_name();
      } else {
        setWarehouse_name((java.lang.String)value);
      }
      break;

    case QUERY_ID:
      if (value == null) {
        unsetQuery_id();
      } else {
        setQuery_id((java.lang.String)value);
      }
      break;

    case STATE:
      if (value == null) {
        unsetState();
      } else {
        setState((java.lang.String)value);
      }
      break;

    case EST_COSTS_SLOTS:
      if (value == null) {
        unsetEst_costs_slots();
      } else {
        setEst_costs_slots((java.lang.String)value);
      }
      break;

    case ALLOCATE_SLOTS:
      if (value == null) {
        unsetAllocate_slots();
      } else {
        setAllocate_slots((java.lang.String)value);
      }
      break;

    case QUEUED_WAIT_SECONDS:
      if (value == null) {
        unsetQueued_wait_seconds();
      } else {
        setQueued_wait_seconds((java.lang.String)value);
      }
      break;

    case QUERY:
      if (value == null) {
        unsetQuery();
      } else {
        setQuery((java.lang.String)value);
      }
      break;

    case QUERY_START_TIME:
      if (value == null) {
        unsetQuery_start_time();
      } else {
        setQuery_start_time((java.lang.String)value);
      }
      break;

    case QUERY_END_TIME:
      if (value == null) {
        unsetQuery_end_time();
      } else {
        setQuery_end_time((java.lang.String)value);
      }
      break;

    case QUERY_DURATION:
      if (value == null) {
        unsetQuery_duration();
      } else {
        setQuery_duration((java.lang.String)value);
      }
      break;

    case EXTRA_MESSAGE:
      if (value == null) {
        unsetExtra_message();
      } else {
        setExtra_message((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case WAREHOUSE_ID:
      return getWarehouse_id();

    case WAREHOUSE_NAME:
      return getWarehouse_name();

    case QUERY_ID:
      return getQuery_id();

    case STATE:
      return getState();

    case EST_COSTS_SLOTS:
      return getEst_costs_slots();

    case ALLOCATE_SLOTS:
      return getAllocate_slots();

    case QUEUED_WAIT_SECONDS:
      return getQueued_wait_seconds();

    case QUERY:
      return getQuery();

    case QUERY_START_TIME:
      return getQuery_start_time();

    case QUERY_END_TIME:
      return getQuery_end_time();

    case QUERY_DURATION:
      return getQuery_duration();

    case EXTRA_MESSAGE:
      return getExtra_message();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case WAREHOUSE_ID:
      return isSetWarehouse_id();
    case WAREHOUSE_NAME:
      return isSetWarehouse_name();
    case QUERY_ID:
      return isSetQuery_id();
    case STATE:
      return isSetState();
    case EST_COSTS_SLOTS:
      return isSetEst_costs_slots();
    case ALLOCATE_SLOTS:
      return isSetAllocate_slots();
    case QUEUED_WAIT_SECONDS:
      return isSetQueued_wait_seconds();
    case QUERY:
      return isSetQuery();
    case QUERY_START_TIME:
      return isSetQuery_start_time();
    case QUERY_END_TIME:
      return isSetQuery_end_time();
    case QUERY_DURATION:
      return isSetQuery_duration();
    case EXTRA_MESSAGE:
      return isSetExtra_message();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TGetWarehouseQueriesResponseItem)
      return this.equals((TGetWarehouseQueriesResponseItem)that);
    return false;
  }

  public boolean equals(TGetWarehouseQueriesResponseItem that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_warehouse_id = true && this.isSetWarehouse_id();
    boolean that_present_warehouse_id = true && that.isSetWarehouse_id();
    if (this_present_warehouse_id || that_present_warehouse_id) {
      if (!(this_present_warehouse_id && that_present_warehouse_id))
        return false;
      if (!this.warehouse_id.equals(that.warehouse_id))
        return false;
    }

    boolean this_present_warehouse_name = true && this.isSetWarehouse_name();
    boolean that_present_warehouse_name = true && that.isSetWarehouse_name();
    if (this_present_warehouse_name || that_present_warehouse_name) {
      if (!(this_present_warehouse_name && that_present_warehouse_name))
        return false;
      if (!this.warehouse_name.equals(that.warehouse_name))
        return false;
    }

    boolean this_present_query_id = true && this.isSetQuery_id();
    boolean that_present_query_id = true && that.isSetQuery_id();
    if (this_present_query_id || that_present_query_id) {
      if (!(this_present_query_id && that_present_query_id))
        return false;
      if (!this.query_id.equals(that.query_id))
        return false;
    }

    boolean this_present_state = true && this.isSetState();
    boolean that_present_state = true && that.isSetState();
    if (this_present_state || that_present_state) {
      if (!(this_present_state && that_present_state))
        return false;
      if (!this.state.equals(that.state))
        return false;
    }

    boolean this_present_est_costs_slots = true && this.isSetEst_costs_slots();
    boolean that_present_est_costs_slots = true && that.isSetEst_costs_slots();
    if (this_present_est_costs_slots || that_present_est_costs_slots) {
      if (!(this_present_est_costs_slots && that_present_est_costs_slots))
        return false;
      if (!this.est_costs_slots.equals(that.est_costs_slots))
        return false;
    }

    boolean this_present_allocate_slots = true && this.isSetAllocate_slots();
    boolean that_present_allocate_slots = true && that.isSetAllocate_slots();
    if (this_present_allocate_slots || that_present_allocate_slots) {
      if (!(this_present_allocate_slots && that_present_allocate_slots))
        return false;
      if (!this.allocate_slots.equals(that.allocate_slots))
        return false;
    }

    boolean this_present_queued_wait_seconds = true && this.isSetQueued_wait_seconds();
    boolean that_present_queued_wait_seconds = true && that.isSetQueued_wait_seconds();
    if (this_present_queued_wait_seconds || that_present_queued_wait_seconds) {
      if (!(this_present_queued_wait_seconds && that_present_queued_wait_seconds))
        return false;
      if (!this.queued_wait_seconds.equals(that.queued_wait_seconds))
        return false;
    }

    boolean this_present_query = true && this.isSetQuery();
    boolean that_present_query = true && that.isSetQuery();
    if (this_present_query || that_present_query) {
      if (!(this_present_query && that_present_query))
        return false;
      if (!this.query.equals(that.query))
        return false;
    }

    boolean this_present_query_start_time = true && this.isSetQuery_start_time();
    boolean that_present_query_start_time = true && that.isSetQuery_start_time();
    if (this_present_query_start_time || that_present_query_start_time) {
      if (!(this_present_query_start_time && that_present_query_start_time))
        return false;
      if (!this.query_start_time.equals(that.query_start_time))
        return false;
    }

    boolean this_present_query_end_time = true && this.isSetQuery_end_time();
    boolean that_present_query_end_time = true && that.isSetQuery_end_time();
    if (this_present_query_end_time || that_present_query_end_time) {
      if (!(this_present_query_end_time && that_present_query_end_time))
        return false;
      if (!this.query_end_time.equals(that.query_end_time))
        return false;
    }

    boolean this_present_query_duration = true && this.isSetQuery_duration();
    boolean that_present_query_duration = true && that.isSetQuery_duration();
    if (this_present_query_duration || that_present_query_duration) {
      if (!(this_present_query_duration && that_present_query_duration))
        return false;
      if (!this.query_duration.equals(that.query_duration))
        return false;
    }

    boolean this_present_extra_message = true && this.isSetExtra_message();
    boolean that_present_extra_message = true && that.isSetExtra_message();
    if (this_present_extra_message || that_present_extra_message) {
      if (!(this_present_extra_message && that_present_extra_message))
        return false;
      if (!this.extra_message.equals(that.extra_message))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetWarehouse_id()) ? 131071 : 524287);
    if (isSetWarehouse_id())
      hashCode = hashCode * 8191 + warehouse_id.hashCode();

    hashCode = hashCode * 8191 + ((isSetWarehouse_name()) ? 131071 : 524287);
    if (isSetWarehouse_name())
      hashCode = hashCode * 8191 + warehouse_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetQuery_id()) ? 131071 : 524287);
    if (isSetQuery_id())
      hashCode = hashCode * 8191 + query_id.hashCode();

    hashCode = hashCode * 8191 + ((isSetState()) ? 131071 : 524287);
    if (isSetState())
      hashCode = hashCode * 8191 + state.hashCode();

    hashCode = hashCode * 8191 + ((isSetEst_costs_slots()) ? 131071 : 524287);
    if (isSetEst_costs_slots())
      hashCode = hashCode * 8191 + est_costs_slots.hashCode();

    hashCode = hashCode * 8191 + ((isSetAllocate_slots()) ? 131071 : 524287);
    if (isSetAllocate_slots())
      hashCode = hashCode * 8191 + allocate_slots.hashCode();

    hashCode = hashCode * 8191 + ((isSetQueued_wait_seconds()) ? 131071 : 524287);
    if (isSetQueued_wait_seconds())
      hashCode = hashCode * 8191 + queued_wait_seconds.hashCode();

    hashCode = hashCode * 8191 + ((isSetQuery()) ? 131071 : 524287);
    if (isSetQuery())
      hashCode = hashCode * 8191 + query.hashCode();

    hashCode = hashCode * 8191 + ((isSetQuery_start_time()) ? 131071 : 524287);
    if (isSetQuery_start_time())
      hashCode = hashCode * 8191 + query_start_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetQuery_end_time()) ? 131071 : 524287);
    if (isSetQuery_end_time())
      hashCode = hashCode * 8191 + query_end_time.hashCode();

    hashCode = hashCode * 8191 + ((isSetQuery_duration()) ? 131071 : 524287);
    if (isSetQuery_duration())
      hashCode = hashCode * 8191 + query_duration.hashCode();

    hashCode = hashCode * 8191 + ((isSetExtra_message()) ? 131071 : 524287);
    if (isSetExtra_message())
      hashCode = hashCode * 8191 + extra_message.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TGetWarehouseQueriesResponseItem other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetWarehouse_id(), other.isSetWarehouse_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWarehouse_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.warehouse_id, other.warehouse_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetWarehouse_name(), other.isSetWarehouse_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetWarehouse_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.warehouse_name, other.warehouse_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetQuery_id(), other.isSetQuery_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuery_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.query_id, other.query_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetState(), other.isSetState());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetState()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.state, other.state);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetEst_costs_slots(), other.isSetEst_costs_slots());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEst_costs_slots()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.est_costs_slots, other.est_costs_slots);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetAllocate_slots(), other.isSetAllocate_slots());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAllocate_slots()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.allocate_slots, other.allocate_slots);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetQueued_wait_seconds(), other.isSetQueued_wait_seconds());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQueued_wait_seconds()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.queued_wait_seconds, other.queued_wait_seconds);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetQuery(), other.isSetQuery());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuery()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.query, other.query);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetQuery_start_time(), other.isSetQuery_start_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuery_start_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.query_start_time, other.query_start_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetQuery_end_time(), other.isSetQuery_end_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuery_end_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.query_end_time, other.query_end_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetQuery_duration(), other.isSetQuery_duration());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetQuery_duration()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.query_duration, other.query_duration);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetExtra_message(), other.isSetExtra_message());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtra_message()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extra_message, other.extra_message);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TGetWarehouseQueriesResponseItem(");
    boolean first = true;

    if (isSetWarehouse_id()) {
      sb.append("warehouse_id:");
      if (this.warehouse_id == null) {
        sb.append("null");
      } else {
        sb.append(this.warehouse_id);
      }
      first = false;
    }
    if (isSetWarehouse_name()) {
      if (!first) sb.append(", ");
      sb.append("warehouse_name:");
      if (this.warehouse_name == null) {
        sb.append("null");
      } else {
        sb.append(this.warehouse_name);
      }
      first = false;
    }
    if (isSetQuery_id()) {
      if (!first) sb.append(", ");
      sb.append("query_id:");
      if (this.query_id == null) {
        sb.append("null");
      } else {
        sb.append(this.query_id);
      }
      first = false;
    }
    if (isSetState()) {
      if (!first) sb.append(", ");
      sb.append("state:");
      if (this.state == null) {
        sb.append("null");
      } else {
        sb.append(this.state);
      }
      first = false;
    }
    if (isSetEst_costs_slots()) {
      if (!first) sb.append(", ");
      sb.append("est_costs_slots:");
      if (this.est_costs_slots == null) {
        sb.append("null");
      } else {
        sb.append(this.est_costs_slots);
      }
      first = false;
    }
    if (isSetAllocate_slots()) {
      if (!first) sb.append(", ");
      sb.append("allocate_slots:");
      if (this.allocate_slots == null) {
        sb.append("null");
      } else {
        sb.append(this.allocate_slots);
      }
      first = false;
    }
    if (isSetQueued_wait_seconds()) {
      if (!first) sb.append(", ");
      sb.append("queued_wait_seconds:");
      if (this.queued_wait_seconds == null) {
        sb.append("null");
      } else {
        sb.append(this.queued_wait_seconds);
      }
      first = false;
    }
    if (isSetQuery()) {
      if (!first) sb.append(", ");
      sb.append("query:");
      if (this.query == null) {
        sb.append("null");
      } else {
        sb.append(this.query);
      }
      first = false;
    }
    if (isSetQuery_start_time()) {
      if (!first) sb.append(", ");
      sb.append("query_start_time:");
      if (this.query_start_time == null) {
        sb.append("null");
      } else {
        sb.append(this.query_start_time);
      }
      first = false;
    }
    if (isSetQuery_end_time()) {
      if (!first) sb.append(", ");
      sb.append("query_end_time:");
      if (this.query_end_time == null) {
        sb.append("null");
      } else {
        sb.append(this.query_end_time);
      }
      first = false;
    }
    if (isSetQuery_duration()) {
      if (!first) sb.append(", ");
      sb.append("query_duration:");
      if (this.query_duration == null) {
        sb.append("null");
      } else {
        sb.append(this.query_duration);
      }
      first = false;
    }
    if (isSetExtra_message()) {
      if (!first) sb.append(", ");
      sb.append("extra_message:");
      if (this.extra_message == null) {
        sb.append("null");
      } else {
        sb.append(this.extra_message);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TGetWarehouseQueriesResponseItemStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TGetWarehouseQueriesResponseItemStandardScheme getScheme() {
      return new TGetWarehouseQueriesResponseItemStandardScheme();
    }
  }

  private static class TGetWarehouseQueriesResponseItemStandardScheme extends org.apache.thrift.scheme.StandardScheme<TGetWarehouseQueriesResponseItem> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TGetWarehouseQueriesResponseItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // WAREHOUSE_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.warehouse_id = iprot.readString();
              struct.setWarehouse_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // WAREHOUSE_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.warehouse_name = iprot.readString();
              struct.setWarehouse_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // QUERY_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.query_id = iprot.readString();
              struct.setQuery_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // STATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.state = iprot.readString();
              struct.setStateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // EST_COSTS_SLOTS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.est_costs_slots = iprot.readString();
              struct.setEst_costs_slotsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ALLOCATE_SLOTS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.allocate_slots = iprot.readString();
              struct.setAllocate_slotsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // QUEUED_WAIT_SECONDS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.queued_wait_seconds = iprot.readString();
              struct.setQueued_wait_secondsIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // QUERY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.query = iprot.readString();
              struct.setQueryIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // QUERY_START_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.query_start_time = iprot.readString();
              struct.setQuery_start_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // QUERY_END_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.query_end_time = iprot.readString();
              struct.setQuery_end_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // QUERY_DURATION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.query_duration = iprot.readString();
              struct.setQuery_durationIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // EXTRA_MESSAGE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.extra_message = iprot.readString();
              struct.setExtra_messageIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TGetWarehouseQueriesResponseItem struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.warehouse_id != null) {
        if (struct.isSetWarehouse_id()) {
          oprot.writeFieldBegin(WAREHOUSE_ID_FIELD_DESC);
          oprot.writeString(struct.warehouse_id);
          oprot.writeFieldEnd();
        }
      }
      if (struct.warehouse_name != null) {
        if (struct.isSetWarehouse_name()) {
          oprot.writeFieldBegin(WAREHOUSE_NAME_FIELD_DESC);
          oprot.writeString(struct.warehouse_name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.query_id != null) {
        if (struct.isSetQuery_id()) {
          oprot.writeFieldBegin(QUERY_ID_FIELD_DESC);
          oprot.writeString(struct.query_id);
          oprot.writeFieldEnd();
        }
      }
      if (struct.state != null) {
        if (struct.isSetState()) {
          oprot.writeFieldBegin(STATE_FIELD_DESC);
          oprot.writeString(struct.state);
          oprot.writeFieldEnd();
        }
      }
      if (struct.est_costs_slots != null) {
        if (struct.isSetEst_costs_slots()) {
          oprot.writeFieldBegin(EST_COSTS_SLOTS_FIELD_DESC);
          oprot.writeString(struct.est_costs_slots);
          oprot.writeFieldEnd();
        }
      }
      if (struct.allocate_slots != null) {
        if (struct.isSetAllocate_slots()) {
          oprot.writeFieldBegin(ALLOCATE_SLOTS_FIELD_DESC);
          oprot.writeString(struct.allocate_slots);
          oprot.writeFieldEnd();
        }
      }
      if (struct.queued_wait_seconds != null) {
        if (struct.isSetQueued_wait_seconds()) {
          oprot.writeFieldBegin(QUEUED_WAIT_SECONDS_FIELD_DESC);
          oprot.writeString(struct.queued_wait_seconds);
          oprot.writeFieldEnd();
        }
      }
      if (struct.query != null) {
        if (struct.isSetQuery()) {
          oprot.writeFieldBegin(QUERY_FIELD_DESC);
          oprot.writeString(struct.query);
          oprot.writeFieldEnd();
        }
      }
      if (struct.query_start_time != null) {
        if (struct.isSetQuery_start_time()) {
          oprot.writeFieldBegin(QUERY_START_TIME_FIELD_DESC);
          oprot.writeString(struct.query_start_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.query_end_time != null) {
        if (struct.isSetQuery_end_time()) {
          oprot.writeFieldBegin(QUERY_END_TIME_FIELD_DESC);
          oprot.writeString(struct.query_end_time);
          oprot.writeFieldEnd();
        }
      }
      if (struct.query_duration != null) {
        if (struct.isSetQuery_duration()) {
          oprot.writeFieldBegin(QUERY_DURATION_FIELD_DESC);
          oprot.writeString(struct.query_duration);
          oprot.writeFieldEnd();
        }
      }
      if (struct.extra_message != null) {
        if (struct.isSetExtra_message()) {
          oprot.writeFieldBegin(EXTRA_MESSAGE_FIELD_DESC);
          oprot.writeString(struct.extra_message);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TGetWarehouseQueriesResponseItemTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TGetWarehouseQueriesResponseItemTupleScheme getScheme() {
      return new TGetWarehouseQueriesResponseItemTupleScheme();
    }
  }

  private static class TGetWarehouseQueriesResponseItemTupleScheme extends org.apache.thrift.scheme.TupleScheme<TGetWarehouseQueriesResponseItem> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TGetWarehouseQueriesResponseItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetWarehouse_id()) {
        optionals.set(0);
      }
      if (struct.isSetWarehouse_name()) {
        optionals.set(1);
      }
      if (struct.isSetQuery_id()) {
        optionals.set(2);
      }
      if (struct.isSetState()) {
        optionals.set(3);
      }
      if (struct.isSetEst_costs_slots()) {
        optionals.set(4);
      }
      if (struct.isSetAllocate_slots()) {
        optionals.set(5);
      }
      if (struct.isSetQueued_wait_seconds()) {
        optionals.set(6);
      }
      if (struct.isSetQuery()) {
        optionals.set(7);
      }
      if (struct.isSetQuery_start_time()) {
        optionals.set(8);
      }
      if (struct.isSetQuery_end_time()) {
        optionals.set(9);
      }
      if (struct.isSetQuery_duration()) {
        optionals.set(10);
      }
      if (struct.isSetExtra_message()) {
        optionals.set(11);
      }
      oprot.writeBitSet(optionals, 12);
      if (struct.isSetWarehouse_id()) {
        oprot.writeString(struct.warehouse_id);
      }
      if (struct.isSetWarehouse_name()) {
        oprot.writeString(struct.warehouse_name);
      }
      if (struct.isSetQuery_id()) {
        oprot.writeString(struct.query_id);
      }
      if (struct.isSetState()) {
        oprot.writeString(struct.state);
      }
      if (struct.isSetEst_costs_slots()) {
        oprot.writeString(struct.est_costs_slots);
      }
      if (struct.isSetAllocate_slots()) {
        oprot.writeString(struct.allocate_slots);
      }
      if (struct.isSetQueued_wait_seconds()) {
        oprot.writeString(struct.queued_wait_seconds);
      }
      if (struct.isSetQuery()) {
        oprot.writeString(struct.query);
      }
      if (struct.isSetQuery_start_time()) {
        oprot.writeString(struct.query_start_time);
      }
      if (struct.isSetQuery_end_time()) {
        oprot.writeString(struct.query_end_time);
      }
      if (struct.isSetQuery_duration()) {
        oprot.writeString(struct.query_duration);
      }
      if (struct.isSetExtra_message()) {
        oprot.writeString(struct.extra_message);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TGetWarehouseQueriesResponseItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(12);
      if (incoming.get(0)) {
        struct.warehouse_id = iprot.readString();
        struct.setWarehouse_idIsSet(true);
      }
      if (incoming.get(1)) {
        struct.warehouse_name = iprot.readString();
        struct.setWarehouse_nameIsSet(true);
      }
      if (incoming.get(2)) {
        struct.query_id = iprot.readString();
        struct.setQuery_idIsSet(true);
      }
      if (incoming.get(3)) {
        struct.state = iprot.readString();
        struct.setStateIsSet(true);
      }
      if (incoming.get(4)) {
        struct.est_costs_slots = iprot.readString();
        struct.setEst_costs_slotsIsSet(true);
      }
      if (incoming.get(5)) {
        struct.allocate_slots = iprot.readString();
        struct.setAllocate_slotsIsSet(true);
      }
      if (incoming.get(6)) {
        struct.queued_wait_seconds = iprot.readString();
        struct.setQueued_wait_secondsIsSet(true);
      }
      if (incoming.get(7)) {
        struct.query = iprot.readString();
        struct.setQueryIsSet(true);
      }
      if (incoming.get(8)) {
        struct.query_start_time = iprot.readString();
        struct.setQuery_start_timeIsSet(true);
      }
      if (incoming.get(9)) {
        struct.query_end_time = iprot.readString();
        struct.setQuery_end_timeIsSet(true);
      }
      if (incoming.get(10)) {
        struct.query_duration = iprot.readString();
        struct.setQuery_durationIsSet(true);
      }
      if (incoming.get(11)) {
        struct.extra_message = iprot.readString();
        struct.setExtra_messageIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

