/**
 * Autogenerated by Thrift Compiler (0.20.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.starrocks.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.20.0)", date = "2025-06-16")
public class TClusterSnapshotsItem implements org.apache.thrift.TBase<TClusterSnapshotsItem, TClusterSnapshotsItem._Fields>, java.io.Serializable, Cloneable, Comparable<TClusterSnapshotsItem> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TClusterSnapshotsItem");

  private static final org.apache.thrift.protocol.TField SNAPSHOT_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("snapshot_name", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField SNAPSHOT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("snapshot_type", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField CREATED_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("created_time", org.apache.thrift.protocol.TType.I64, (short)3);
  private static final org.apache.thrift.protocol.TField FE_JOURANL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("fe_jouranl_id", org.apache.thrift.protocol.TType.I64, (short)4);
  private static final org.apache.thrift.protocol.TField STARMGR_JOURANL_ID_FIELD_DESC = new org.apache.thrift.protocol.TField("starmgr_jouranl_id", org.apache.thrift.protocol.TType.I64, (short)5);
  private static final org.apache.thrift.protocol.TField PROPERTIES_FIELD_DESC = new org.apache.thrift.protocol.TField("properties", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField STORAGE_VOLUME_FIELD_DESC = new org.apache.thrift.protocol.TField("storage_volume", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField STORAGE_PATH_FIELD_DESC = new org.apache.thrift.protocol.TField("storage_path", org.apache.thrift.protocol.TType.STRING, (short)8);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TClusterSnapshotsItemStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TClusterSnapshotsItemTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String snapshot_name; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String snapshot_type; // optional
  public long created_time; // optional
  public long fe_jouranl_id; // optional
  public long starmgr_jouranl_id; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String properties; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String storage_volume; // optional
  public @org.apache.thrift.annotation.Nullable java.lang.String storage_path; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SNAPSHOT_NAME((short)1, "snapshot_name"),
    SNAPSHOT_TYPE((short)2, "snapshot_type"),
    CREATED_TIME((short)3, "created_time"),
    FE_JOURANL_ID((short)4, "fe_jouranl_id"),
    STARMGR_JOURANL_ID((short)5, "starmgr_jouranl_id"),
    PROPERTIES((short)6, "properties"),
    STORAGE_VOLUME((short)7, "storage_volume"),
    STORAGE_PATH((short)8, "storage_path");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SNAPSHOT_NAME
          return SNAPSHOT_NAME;
        case 2: // SNAPSHOT_TYPE
          return SNAPSHOT_TYPE;
        case 3: // CREATED_TIME
          return CREATED_TIME;
        case 4: // FE_JOURANL_ID
          return FE_JOURANL_ID;
        case 5: // STARMGR_JOURANL_ID
          return STARMGR_JOURANL_ID;
        case 6: // PROPERTIES
          return PROPERTIES;
        case 7: // STORAGE_VOLUME
          return STORAGE_VOLUME;
        case 8: // STORAGE_PATH
          return STORAGE_PATH;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __CREATED_TIME_ISSET_ID = 0;
  private static final int __FE_JOURANL_ID_ISSET_ID = 1;
  private static final int __STARMGR_JOURANL_ID_ISSET_ID = 2;
  private byte __isset_bitfield = 0;
  private static final _Fields optionals[] = {_Fields.SNAPSHOT_NAME,_Fields.SNAPSHOT_TYPE,_Fields.CREATED_TIME,_Fields.FE_JOURANL_ID,_Fields.STARMGR_JOURANL_ID,_Fields.PROPERTIES,_Fields.STORAGE_VOLUME,_Fields.STORAGE_PATH};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SNAPSHOT_NAME, new org.apache.thrift.meta_data.FieldMetaData("snapshot_name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.SNAPSHOT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("snapshot_type", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATED_TIME, new org.apache.thrift.meta_data.FieldMetaData("created_time", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.FE_JOURANL_ID, new org.apache.thrift.meta_data.FieldMetaData("fe_jouranl_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.STARMGR_JOURANL_ID, new org.apache.thrift.meta_data.FieldMetaData("starmgr_jouranl_id", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I64)));
    tmpMap.put(_Fields.PROPERTIES, new org.apache.thrift.meta_data.FieldMetaData("properties", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STORAGE_VOLUME, new org.apache.thrift.meta_data.FieldMetaData("storage_volume", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.STORAGE_PATH, new org.apache.thrift.meta_data.FieldMetaData("storage_path", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TClusterSnapshotsItem.class, metaDataMap);
  }

  public TClusterSnapshotsItem() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TClusterSnapshotsItem(TClusterSnapshotsItem other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetSnapshot_name()) {
      this.snapshot_name = other.snapshot_name;
    }
    if (other.isSetSnapshot_type()) {
      this.snapshot_type = other.snapshot_type;
    }
    this.created_time = other.created_time;
    this.fe_jouranl_id = other.fe_jouranl_id;
    this.starmgr_jouranl_id = other.starmgr_jouranl_id;
    if (other.isSetProperties()) {
      this.properties = other.properties;
    }
    if (other.isSetStorage_volume()) {
      this.storage_volume = other.storage_volume;
    }
    if (other.isSetStorage_path()) {
      this.storage_path = other.storage_path;
    }
  }

  @Override
  public TClusterSnapshotsItem deepCopy() {
    return new TClusterSnapshotsItem(this);
  }

  @Override
  public void clear() {
    this.snapshot_name = null;
    this.snapshot_type = null;
    setCreated_timeIsSet(false);
    this.created_time = 0;
    setFe_jouranl_idIsSet(false);
    this.fe_jouranl_id = 0;
    setStarmgr_jouranl_idIsSet(false);
    this.starmgr_jouranl_id = 0;
    this.properties = null;
    this.storage_volume = null;
    this.storage_path = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getSnapshot_name() {
    return this.snapshot_name;
  }

  public TClusterSnapshotsItem setSnapshot_name(@org.apache.thrift.annotation.Nullable java.lang.String snapshot_name) {
    this.snapshot_name = snapshot_name;
    return this;
  }

  public void unsetSnapshot_name() {
    this.snapshot_name = null;
  }

  /** Returns true if field snapshot_name is set (has been assigned a value) and false otherwise */
  public boolean isSetSnapshot_name() {
    return this.snapshot_name != null;
  }

  public void setSnapshot_nameIsSet(boolean value) {
    if (!value) {
      this.snapshot_name = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getSnapshot_type() {
    return this.snapshot_type;
  }

  public TClusterSnapshotsItem setSnapshot_type(@org.apache.thrift.annotation.Nullable java.lang.String snapshot_type) {
    this.snapshot_type = snapshot_type;
    return this;
  }

  public void unsetSnapshot_type() {
    this.snapshot_type = null;
  }

  /** Returns true if field snapshot_type is set (has been assigned a value) and false otherwise */
  public boolean isSetSnapshot_type() {
    return this.snapshot_type != null;
  }

  public void setSnapshot_typeIsSet(boolean value) {
    if (!value) {
      this.snapshot_type = null;
    }
  }

  public long getCreated_time() {
    return this.created_time;
  }

  public TClusterSnapshotsItem setCreated_time(long created_time) {
    this.created_time = created_time;
    setCreated_timeIsSet(true);
    return this;
  }

  public void unsetCreated_time() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __CREATED_TIME_ISSET_ID);
  }

  /** Returns true if field created_time is set (has been assigned a value) and false otherwise */
  public boolean isSetCreated_time() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __CREATED_TIME_ISSET_ID);
  }

  public void setCreated_timeIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __CREATED_TIME_ISSET_ID, value);
  }

  public long getFe_jouranl_id() {
    return this.fe_jouranl_id;
  }

  public TClusterSnapshotsItem setFe_jouranl_id(long fe_jouranl_id) {
    this.fe_jouranl_id = fe_jouranl_id;
    setFe_jouranl_idIsSet(true);
    return this;
  }

  public void unsetFe_jouranl_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FE_JOURANL_ID_ISSET_ID);
  }

  /** Returns true if field fe_jouranl_id is set (has been assigned a value) and false otherwise */
  public boolean isSetFe_jouranl_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FE_JOURANL_ID_ISSET_ID);
  }

  public void setFe_jouranl_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FE_JOURANL_ID_ISSET_ID, value);
  }

  public long getStarmgr_jouranl_id() {
    return this.starmgr_jouranl_id;
  }

  public TClusterSnapshotsItem setStarmgr_jouranl_id(long starmgr_jouranl_id) {
    this.starmgr_jouranl_id = starmgr_jouranl_id;
    setStarmgr_jouranl_idIsSet(true);
    return this;
  }

  public void unsetStarmgr_jouranl_id() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __STARMGR_JOURANL_ID_ISSET_ID);
  }

  /** Returns true if field starmgr_jouranl_id is set (has been assigned a value) and false otherwise */
  public boolean isSetStarmgr_jouranl_id() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __STARMGR_JOURANL_ID_ISSET_ID);
  }

  public void setStarmgr_jouranl_idIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __STARMGR_JOURANL_ID_ISSET_ID, value);
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getProperties() {
    return this.properties;
  }

  public TClusterSnapshotsItem setProperties(@org.apache.thrift.annotation.Nullable java.lang.String properties) {
    this.properties = properties;
    return this;
  }

  public void unsetProperties() {
    this.properties = null;
  }

  /** Returns true if field properties is set (has been assigned a value) and false otherwise */
  public boolean isSetProperties() {
    return this.properties != null;
  }

  public void setPropertiesIsSet(boolean value) {
    if (!value) {
      this.properties = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getStorage_volume() {
    return this.storage_volume;
  }

  public TClusterSnapshotsItem setStorage_volume(@org.apache.thrift.annotation.Nullable java.lang.String storage_volume) {
    this.storage_volume = storage_volume;
    return this;
  }

  public void unsetStorage_volume() {
    this.storage_volume = null;
  }

  /** Returns true if field storage_volume is set (has been assigned a value) and false otherwise */
  public boolean isSetStorage_volume() {
    return this.storage_volume != null;
  }

  public void setStorage_volumeIsSet(boolean value) {
    if (!value) {
      this.storage_volume = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getStorage_path() {
    return this.storage_path;
  }

  public TClusterSnapshotsItem setStorage_path(@org.apache.thrift.annotation.Nullable java.lang.String storage_path) {
    this.storage_path = storage_path;
    return this;
  }

  public void unsetStorage_path() {
    this.storage_path = null;
  }

  /** Returns true if field storage_path is set (has been assigned a value) and false otherwise */
  public boolean isSetStorage_path() {
    return this.storage_path != null;
  }

  public void setStorage_pathIsSet(boolean value) {
    if (!value) {
      this.storage_path = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case SNAPSHOT_NAME:
      if (value == null) {
        unsetSnapshot_name();
      } else {
        setSnapshot_name((java.lang.String)value);
      }
      break;

    case SNAPSHOT_TYPE:
      if (value == null) {
        unsetSnapshot_type();
      } else {
        setSnapshot_type((java.lang.String)value);
      }
      break;

    case CREATED_TIME:
      if (value == null) {
        unsetCreated_time();
      } else {
        setCreated_time((java.lang.Long)value);
      }
      break;

    case FE_JOURANL_ID:
      if (value == null) {
        unsetFe_jouranl_id();
      } else {
        setFe_jouranl_id((java.lang.Long)value);
      }
      break;

    case STARMGR_JOURANL_ID:
      if (value == null) {
        unsetStarmgr_jouranl_id();
      } else {
        setStarmgr_jouranl_id((java.lang.Long)value);
      }
      break;

    case PROPERTIES:
      if (value == null) {
        unsetProperties();
      } else {
        setProperties((java.lang.String)value);
      }
      break;

    case STORAGE_VOLUME:
      if (value == null) {
        unsetStorage_volume();
      } else {
        setStorage_volume((java.lang.String)value);
      }
      break;

    case STORAGE_PATH:
      if (value == null) {
        unsetStorage_path();
      } else {
        setStorage_path((java.lang.String)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SNAPSHOT_NAME:
      return getSnapshot_name();

    case SNAPSHOT_TYPE:
      return getSnapshot_type();

    case CREATED_TIME:
      return getCreated_time();

    case FE_JOURANL_ID:
      return getFe_jouranl_id();

    case STARMGR_JOURANL_ID:
      return getStarmgr_jouranl_id();

    case PROPERTIES:
      return getProperties();

    case STORAGE_VOLUME:
      return getStorage_volume();

    case STORAGE_PATH:
      return getStorage_path();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SNAPSHOT_NAME:
      return isSetSnapshot_name();
    case SNAPSHOT_TYPE:
      return isSetSnapshot_type();
    case CREATED_TIME:
      return isSetCreated_time();
    case FE_JOURANL_ID:
      return isSetFe_jouranl_id();
    case STARMGR_JOURANL_ID:
      return isSetStarmgr_jouranl_id();
    case PROPERTIES:
      return isSetProperties();
    case STORAGE_VOLUME:
      return isSetStorage_volume();
    case STORAGE_PATH:
      return isSetStorage_path();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TClusterSnapshotsItem)
      return this.equals((TClusterSnapshotsItem)that);
    return false;
  }

  public boolean equals(TClusterSnapshotsItem that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_snapshot_name = true && this.isSetSnapshot_name();
    boolean that_present_snapshot_name = true && that.isSetSnapshot_name();
    if (this_present_snapshot_name || that_present_snapshot_name) {
      if (!(this_present_snapshot_name && that_present_snapshot_name))
        return false;
      if (!this.snapshot_name.equals(that.snapshot_name))
        return false;
    }

    boolean this_present_snapshot_type = true && this.isSetSnapshot_type();
    boolean that_present_snapshot_type = true && that.isSetSnapshot_type();
    if (this_present_snapshot_type || that_present_snapshot_type) {
      if (!(this_present_snapshot_type && that_present_snapshot_type))
        return false;
      if (!this.snapshot_type.equals(that.snapshot_type))
        return false;
    }

    boolean this_present_created_time = true && this.isSetCreated_time();
    boolean that_present_created_time = true && that.isSetCreated_time();
    if (this_present_created_time || that_present_created_time) {
      if (!(this_present_created_time && that_present_created_time))
        return false;
      if (this.created_time != that.created_time)
        return false;
    }

    boolean this_present_fe_jouranl_id = true && this.isSetFe_jouranl_id();
    boolean that_present_fe_jouranl_id = true && that.isSetFe_jouranl_id();
    if (this_present_fe_jouranl_id || that_present_fe_jouranl_id) {
      if (!(this_present_fe_jouranl_id && that_present_fe_jouranl_id))
        return false;
      if (this.fe_jouranl_id != that.fe_jouranl_id)
        return false;
    }

    boolean this_present_starmgr_jouranl_id = true && this.isSetStarmgr_jouranl_id();
    boolean that_present_starmgr_jouranl_id = true && that.isSetStarmgr_jouranl_id();
    if (this_present_starmgr_jouranl_id || that_present_starmgr_jouranl_id) {
      if (!(this_present_starmgr_jouranl_id && that_present_starmgr_jouranl_id))
        return false;
      if (this.starmgr_jouranl_id != that.starmgr_jouranl_id)
        return false;
    }

    boolean this_present_properties = true && this.isSetProperties();
    boolean that_present_properties = true && that.isSetProperties();
    if (this_present_properties || that_present_properties) {
      if (!(this_present_properties && that_present_properties))
        return false;
      if (!this.properties.equals(that.properties))
        return false;
    }

    boolean this_present_storage_volume = true && this.isSetStorage_volume();
    boolean that_present_storage_volume = true && that.isSetStorage_volume();
    if (this_present_storage_volume || that_present_storage_volume) {
      if (!(this_present_storage_volume && that_present_storage_volume))
        return false;
      if (!this.storage_volume.equals(that.storage_volume))
        return false;
    }

    boolean this_present_storage_path = true && this.isSetStorage_path();
    boolean that_present_storage_path = true && that.isSetStorage_path();
    if (this_present_storage_path || that_present_storage_path) {
      if (!(this_present_storage_path && that_present_storage_path))
        return false;
      if (!this.storage_path.equals(that.storage_path))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetSnapshot_name()) ? 131071 : 524287);
    if (isSetSnapshot_name())
      hashCode = hashCode * 8191 + snapshot_name.hashCode();

    hashCode = hashCode * 8191 + ((isSetSnapshot_type()) ? 131071 : 524287);
    if (isSetSnapshot_type())
      hashCode = hashCode * 8191 + snapshot_type.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreated_time()) ? 131071 : 524287);
    if (isSetCreated_time())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(created_time);

    hashCode = hashCode * 8191 + ((isSetFe_jouranl_id()) ? 131071 : 524287);
    if (isSetFe_jouranl_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(fe_jouranl_id);

    hashCode = hashCode * 8191 + ((isSetStarmgr_jouranl_id()) ? 131071 : 524287);
    if (isSetStarmgr_jouranl_id())
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(starmgr_jouranl_id);

    hashCode = hashCode * 8191 + ((isSetProperties()) ? 131071 : 524287);
    if (isSetProperties())
      hashCode = hashCode * 8191 + properties.hashCode();

    hashCode = hashCode * 8191 + ((isSetStorage_volume()) ? 131071 : 524287);
    if (isSetStorage_volume())
      hashCode = hashCode * 8191 + storage_volume.hashCode();

    hashCode = hashCode * 8191 + ((isSetStorage_path()) ? 131071 : 524287);
    if (isSetStorage_path())
      hashCode = hashCode * 8191 + storage_path.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TClusterSnapshotsItem other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetSnapshot_name(), other.isSetSnapshot_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSnapshot_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.snapshot_name, other.snapshot_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSnapshot_type(), other.isSetSnapshot_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSnapshot_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.snapshot_type, other.snapshot_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCreated_time(), other.isSetCreated_time());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreated_time()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.created_time, other.created_time);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetFe_jouranl_id(), other.isSetFe_jouranl_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFe_jouranl_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fe_jouranl_id, other.fe_jouranl_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetStarmgr_jouranl_id(), other.isSetStarmgr_jouranl_id());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStarmgr_jouranl_id()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.starmgr_jouranl_id, other.starmgr_jouranl_id);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetProperties(), other.isSetProperties());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetProperties()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.properties, other.properties);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetStorage_volume(), other.isSetStorage_volume());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStorage_volume()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.storage_volume, other.storage_volume);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetStorage_path(), other.isSetStorage_path());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetStorage_path()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.storage_path, other.storage_path);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TClusterSnapshotsItem(");
    boolean first = true;

    if (isSetSnapshot_name()) {
      sb.append("snapshot_name:");
      if (this.snapshot_name == null) {
        sb.append("null");
      } else {
        sb.append(this.snapshot_name);
      }
      first = false;
    }
    if (isSetSnapshot_type()) {
      if (!first) sb.append(", ");
      sb.append("snapshot_type:");
      if (this.snapshot_type == null) {
        sb.append("null");
      } else {
        sb.append(this.snapshot_type);
      }
      first = false;
    }
    if (isSetCreated_time()) {
      if (!first) sb.append(", ");
      sb.append("created_time:");
      sb.append(this.created_time);
      first = false;
    }
    if (isSetFe_jouranl_id()) {
      if (!first) sb.append(", ");
      sb.append("fe_jouranl_id:");
      sb.append(this.fe_jouranl_id);
      first = false;
    }
    if (isSetStarmgr_jouranl_id()) {
      if (!first) sb.append(", ");
      sb.append("starmgr_jouranl_id:");
      sb.append(this.starmgr_jouranl_id);
      first = false;
    }
    if (isSetProperties()) {
      if (!first) sb.append(", ");
      sb.append("properties:");
      if (this.properties == null) {
        sb.append("null");
      } else {
        sb.append(this.properties);
      }
      first = false;
    }
    if (isSetStorage_volume()) {
      if (!first) sb.append(", ");
      sb.append("storage_volume:");
      if (this.storage_volume == null) {
        sb.append("null");
      } else {
        sb.append(this.storage_volume);
      }
      first = false;
    }
    if (isSetStorage_path()) {
      if (!first) sb.append(", ");
      sb.append("storage_path:");
      if (this.storage_path == null) {
        sb.append("null");
      } else {
        sb.append(this.storage_path);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TClusterSnapshotsItemStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TClusterSnapshotsItemStandardScheme getScheme() {
      return new TClusterSnapshotsItemStandardScheme();
    }
  }

  private static class TClusterSnapshotsItemStandardScheme extends org.apache.thrift.scheme.StandardScheme<TClusterSnapshotsItem> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TClusterSnapshotsItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SNAPSHOT_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.snapshot_name = iprot.readString();
              struct.setSnapshot_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SNAPSHOT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.snapshot_type = iprot.readString();
              struct.setSnapshot_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // CREATED_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.created_time = iprot.readI64();
              struct.setCreated_timeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FE_JOURANL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.fe_jouranl_id = iprot.readI64();
              struct.setFe_jouranl_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // STARMGR_JOURANL_ID
            if (schemeField.type == org.apache.thrift.protocol.TType.I64) {
              struct.starmgr_jouranl_id = iprot.readI64();
              struct.setStarmgr_jouranl_idIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // PROPERTIES
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.properties = iprot.readString();
              struct.setPropertiesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // STORAGE_VOLUME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.storage_volume = iprot.readString();
              struct.setStorage_volumeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // STORAGE_PATH
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.storage_path = iprot.readString();
              struct.setStorage_pathIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TClusterSnapshotsItem struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.snapshot_name != null) {
        if (struct.isSetSnapshot_name()) {
          oprot.writeFieldBegin(SNAPSHOT_NAME_FIELD_DESC);
          oprot.writeString(struct.snapshot_name);
          oprot.writeFieldEnd();
        }
      }
      if (struct.snapshot_type != null) {
        if (struct.isSetSnapshot_type()) {
          oprot.writeFieldBegin(SNAPSHOT_TYPE_FIELD_DESC);
          oprot.writeString(struct.snapshot_type);
          oprot.writeFieldEnd();
        }
      }
      if (struct.isSetCreated_time()) {
        oprot.writeFieldBegin(CREATED_TIME_FIELD_DESC);
        oprot.writeI64(struct.created_time);
        oprot.writeFieldEnd();
      }
      if (struct.isSetFe_jouranl_id()) {
        oprot.writeFieldBegin(FE_JOURANL_ID_FIELD_DESC);
        oprot.writeI64(struct.fe_jouranl_id);
        oprot.writeFieldEnd();
      }
      if (struct.isSetStarmgr_jouranl_id()) {
        oprot.writeFieldBegin(STARMGR_JOURANL_ID_FIELD_DESC);
        oprot.writeI64(struct.starmgr_jouranl_id);
        oprot.writeFieldEnd();
      }
      if (struct.properties != null) {
        if (struct.isSetProperties()) {
          oprot.writeFieldBegin(PROPERTIES_FIELD_DESC);
          oprot.writeString(struct.properties);
          oprot.writeFieldEnd();
        }
      }
      if (struct.storage_volume != null) {
        if (struct.isSetStorage_volume()) {
          oprot.writeFieldBegin(STORAGE_VOLUME_FIELD_DESC);
          oprot.writeString(struct.storage_volume);
          oprot.writeFieldEnd();
        }
      }
      if (struct.storage_path != null) {
        if (struct.isSetStorage_path()) {
          oprot.writeFieldBegin(STORAGE_PATH_FIELD_DESC);
          oprot.writeString(struct.storage_path);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TClusterSnapshotsItemTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TClusterSnapshotsItemTupleScheme getScheme() {
      return new TClusterSnapshotsItemTupleScheme();
    }
  }

  private static class TClusterSnapshotsItemTupleScheme extends org.apache.thrift.scheme.TupleScheme<TClusterSnapshotsItem> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TClusterSnapshotsItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSnapshot_name()) {
        optionals.set(0);
      }
      if (struct.isSetSnapshot_type()) {
        optionals.set(1);
      }
      if (struct.isSetCreated_time()) {
        optionals.set(2);
      }
      if (struct.isSetFe_jouranl_id()) {
        optionals.set(3);
      }
      if (struct.isSetStarmgr_jouranl_id()) {
        optionals.set(4);
      }
      if (struct.isSetProperties()) {
        optionals.set(5);
      }
      if (struct.isSetStorage_volume()) {
        optionals.set(6);
      }
      if (struct.isSetStorage_path()) {
        optionals.set(7);
      }
      oprot.writeBitSet(optionals, 8);
      if (struct.isSetSnapshot_name()) {
        oprot.writeString(struct.snapshot_name);
      }
      if (struct.isSetSnapshot_type()) {
        oprot.writeString(struct.snapshot_type);
      }
      if (struct.isSetCreated_time()) {
        oprot.writeI64(struct.created_time);
      }
      if (struct.isSetFe_jouranl_id()) {
        oprot.writeI64(struct.fe_jouranl_id);
      }
      if (struct.isSetStarmgr_jouranl_id()) {
        oprot.writeI64(struct.starmgr_jouranl_id);
      }
      if (struct.isSetProperties()) {
        oprot.writeString(struct.properties);
      }
      if (struct.isSetStorage_volume()) {
        oprot.writeString(struct.storage_volume);
      }
      if (struct.isSetStorage_path()) {
        oprot.writeString(struct.storage_path);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TClusterSnapshotsItem struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(8);
      if (incoming.get(0)) {
        struct.snapshot_name = iprot.readString();
        struct.setSnapshot_nameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.snapshot_type = iprot.readString();
        struct.setSnapshot_typeIsSet(true);
      }
      if (incoming.get(2)) {
        struct.created_time = iprot.readI64();
        struct.setCreated_timeIsSet(true);
      }
      if (incoming.get(3)) {
        struct.fe_jouranl_id = iprot.readI64();
        struct.setFe_jouranl_idIsSet(true);
      }
      if (incoming.get(4)) {
        struct.starmgr_jouranl_id = iprot.readI64();
        struct.setStarmgr_jouranl_idIsSet(true);
      }
      if (incoming.get(5)) {
        struct.properties = iprot.readString();
        struct.setPropertiesIsSet(true);
      }
      if (incoming.get(6)) {
        struct.storage_volume = iprot.readString();
        struct.setStorage_volumeIsSet(true);
      }
      if (incoming.get(7)) {
        struct.storage_path = iprot.readString();
        struct.setStorage_pathIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

